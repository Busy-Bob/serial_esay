TimeQuest Timing Analyzer report for serial
Mon Jul 03 15:17:41 2017
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'key_out:inst3|OUT_finish'
 12. Slow Model Setup: 'clk'
 13. Slow Model Setup: 'divider:inst|OUT_clk1'
 14. Slow Model Setup: 'divider:inst|OUT_clk2'
 15. Slow Model Hold: 'clk'
 16. Slow Model Hold: 'divider:inst|OUT_clk1'
 17. Slow Model Hold: 'key_out:inst3|OUT_finish'
 18. Slow Model Hold: 'divider:inst|OUT_clk2'
 19. Slow Model Recovery: 'divider:inst|OUT_clk2'
 20. Slow Model Removal: 'divider:inst|OUT_clk2'
 21. Slow Model Minimum Pulse Width: 'clk'
 22. Slow Model Minimum Pulse Width: 'divider:inst|OUT_clk1'
 23. Slow Model Minimum Pulse Width: 'divider:inst|OUT_clk2'
 24. Slow Model Minimum Pulse Width: 'key_out:inst3|OUT_finish'
 25. Setup Times
 26. Hold Times
 27. Clock to Output Times
 28. Minimum Clock to Output Times
 29. Fast Model Setup Summary
 30. Fast Model Hold Summary
 31. Fast Model Recovery Summary
 32. Fast Model Removal Summary
 33. Fast Model Minimum Pulse Width Summary
 34. Fast Model Setup: 'key_out:inst3|OUT_finish'
 35. Fast Model Setup: 'clk'
 36. Fast Model Setup: 'divider:inst|OUT_clk1'
 37. Fast Model Setup: 'divider:inst|OUT_clk2'
 38. Fast Model Hold: 'clk'
 39. Fast Model Hold: 'divider:inst|OUT_clk1'
 40. Fast Model Hold: 'key_out:inst3|OUT_finish'
 41. Fast Model Hold: 'divider:inst|OUT_clk2'
 42. Fast Model Recovery: 'divider:inst|OUT_clk2'
 43. Fast Model Removal: 'divider:inst|OUT_clk2'
 44. Fast Model Minimum Pulse Width: 'clk'
 45. Fast Model Minimum Pulse Width: 'divider:inst|OUT_clk1'
 46. Fast Model Minimum Pulse Width: 'divider:inst|OUT_clk2'
 47. Fast Model Minimum Pulse Width: 'key_out:inst3|OUT_finish'
 48. Setup Times
 49. Hold Times
 50. Clock to Output Times
 51. Minimum Clock to Output Times
 52. Multicorner Timing Analysis Summary
 53. Setup Times
 54. Hold Times
 55. Clock to Output Times
 56. Minimum Clock to Output Times
 57. Setup Transfers
 58. Hold Transfers
 59. Recovery Transfers
 60. Removal Transfers
 61. Report TCCS
 62. Report RSKM
 63. Unconstrained Paths
 64. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                        ;
+--------------------+-----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Full Version ;
; Revision Name      ; serial                                              ;
; Device Family      ; Cyclone II                                          ;
; Device Name        ; EP2C5Q208C8                                         ;
; Timing Models      ; Final                                               ;
; Delay Model        ; Combined                                            ;
; Rise/Fall Delays   ; Unavailable                                         ;
+--------------------+-----------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ; < 0.1%      ;
;     Processors 3-4         ;   0.0%      ;
+----------------------------+-------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                             ;
+--------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------+
; Clock Name               ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                      ;
+--------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------+
; clk                      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                      ;
; divider:inst|OUT_clk1    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { divider:inst|OUT_clk1 }    ;
; divider:inst|OUT_clk2    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { divider:inst|OUT_clk2 }    ;
; key_out:inst3|OUT_finish ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { key_out:inst3|OUT_finish } ;
+--------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------+


+----------------------------------------------------------------+
; Slow Model Fmax Summary                                        ;
+------------+-----------------+--------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name               ; Note ;
+------------+-----------------+--------------------------+------+
; 32.01 MHz  ; 32.01 MHz       ; key_out:inst3|OUT_finish ;      ;
; 121.45 MHz ; 121.45 MHz      ; clk                      ;      ;
; 155.81 MHz ; 155.81 MHz      ; divider:inst|OUT_clk1    ;      ;
+------------+-----------------+--------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------------------------+
; Slow Model Setup Summary                           ;
+--------------------------+---------+---------------+
; Clock                    ; Slack   ; End Point TNS ;
+--------------------------+---------+---------------+
; key_out:inst3|OUT_finish ; -22.728 ; -73.808       ;
; clk                      ; -7.234  ; -387.669      ;
; divider:inst|OUT_clk1    ; -5.418  ; -376.327      ;
; divider:inst|OUT_clk2    ; -1.191  ; -9.038        ;
+--------------------------+---------+---------------+


+---------------------------------------------------+
; Slow Model Hold Summary                           ;
+--------------------------+--------+---------------+
; Clock                    ; Slack  ; End Point TNS ;
+--------------------------+--------+---------------+
; clk                      ; -2.611 ; -5.205        ;
; divider:inst|OUT_clk1    ; -1.537 ; -1.537        ;
; key_out:inst3|OUT_finish ; -0.723 ; -1.156        ;
; divider:inst|OUT_clk2    ; 0.686  ; 0.000         ;
+--------------------------+--------+---------------+


+------------------------------------------------+
; Slow Model Recovery Summary                    ;
+-----------------------+--------+---------------+
; Clock                 ; Slack  ; End Point TNS ;
+-----------------------+--------+---------------+
; divider:inst|OUT_clk2 ; -0.534 ; -5.834        ;
+-----------------------+--------+---------------+


+-----------------------------------------------+
; Slow Model Removal Summary                    ;
+-----------------------+-------+---------------+
; Clock                 ; Slack ; End Point TNS ;
+-----------------------+-------+---------------+
; divider:inst|OUT_clk2 ; 0.758 ; 0.000         ;
+-----------------------+-------+---------------+


+---------------------------------------------------+
; Slow Model Minimum Pulse Width Summary            ;
+--------------------------+--------+---------------+
; Clock                    ; Slack  ; End Point TNS ;
+--------------------------+--------+---------------+
; clk                      ; -1.941 ; -99.885       ;
; divider:inst|OUT_clk1    ; -0.742 ; -135.044      ;
; divider:inst|OUT_clk2    ; -0.742 ; -16.324       ;
; key_out:inst3|OUT_finish ; 0.500  ; 0.000         ;
+--------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'key_out:inst3|OUT_finish'                                                                                                                                           ;
+---------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack   ; From Node                                     ; To Node                       ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+---------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; -22.728 ; key_out:inst3|OUT_number[1]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.501      ; 22.353     ;
; -22.467 ; key_out:inst3|OUT_number[0]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.501      ; 22.092     ;
; -22.275 ; key_out:inst3|OUT_number[2]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.501      ; 21.900     ;
; -22.131 ; key_out:inst3|OUT_number[3]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.501      ; 21.756     ;
; -22.017 ; key_out:inst3|OUT_number[4]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.501      ; 21.642     ;
; -21.546 ; key_out:inst3|OUT_value[17]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.489      ; 21.159     ;
; -20.930 ; key_out:inst3|OUT_value[21]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.489      ; 20.543     ;
; -20.890 ; key_out:inst3|OUT_show_value[1]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.509      ; 20.523     ;
; -20.696 ; key_out:inst3|OUT_value[37]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 20.333     ;
; -20.619 ; key_out:inst3|OUT_show_value[5]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.509      ; 20.252     ;
; -20.596 ; key_out:inst3|OUT_show_value[0]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.492      ; 20.212     ;
; -20.558 ; key_out:inst3|OUT_value[27]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.486      ; 20.168     ;
; -20.532 ; key_out:inst3|OUT_show_value[8]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.492      ; 20.148     ;
; -20.515 ; key_out:inst3|OUT_value[19]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.486      ; 20.125     ;
; -20.507 ; key_out:inst3|OUT_value[52]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 20.115     ;
; -20.423 ; key_out:inst3|OUT_value[36]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.485      ; 20.032     ;
; -20.370 ; key_out:inst3|OUT_show_value[9]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.509      ; 20.003     ;
; -20.352 ; key_out:inst3|OUT_show_value[7]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.521      ; 19.997     ;
; -20.296 ; key_out:inst3|OUT_show_value[10]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 19.933     ;
; -20.278 ; key_out:inst3|OUT_show_value[11]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.521      ; 19.923     ;
; -20.226 ; key_out:inst3|OUT_show_value[6]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 19.863     ;
; -20.226 ; key_out:inst3|OUT_show_value[3]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.521      ; 19.871     ;
; -20.224 ; key_out:inst3|OUT_show_value[2]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.497      ; 19.845     ;
; -20.205 ; key_out:inst3|OUT_value[25]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.504      ; 19.833     ;
; -20.192 ; key_out:inst3|OUT_show_value[4]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.492      ; 19.808     ;
; -20.151 ; key_out:inst3|OUT_value[24]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.487      ; 19.762     ;
; -20.120 ; key_out:inst3|OUT_value[23]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.486      ; 19.730     ;
; -20.100 ; key_out:inst3|OUT_show_value[14]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.483      ; 19.707     ;
; -20.064 ; key_out:inst3|OUT_value[63]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.483      ; 19.671     ;
; -19.943 ; key_out:inst3|OUT_value[18]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.514      ; 19.581     ;
; -19.912 ; key_out:inst3|OUT_show_value[15]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.521      ; 19.557     ;
; -19.909 ; key_out:inst3|OUT_value[29]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.516      ; 19.549     ;
; -19.822 ; key_out:inst3|OUT_value[55]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 19.430     ;
; -19.819 ; key_out:inst3|OUT_value[16]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.492      ; 19.435     ;
; -19.752 ; key_out:inst3|OUT_value[44]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 19.360     ;
; -19.718 ; key_out:inst3|OUT_show_value[13]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.509      ; 19.351     ;
; -19.701 ; key_out:inst3|OUT_value[31]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.486      ; 19.311     ;
; -19.678 ; key_out:inst3|OUT_value[22]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 19.315     ;
; -19.603 ; key_out:inst3|OUT_value[51]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.503      ; 19.230     ;
; -19.590 ; key_out:inst3|OUT_value[30]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.481      ; 19.195     ;
; -19.582 ; key_out:inst3|OUT_value[20]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.491      ; 19.197     ;
; -19.381 ; key_out:inst3|OUT_value[28]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.489      ; 18.994     ;
; -19.318 ; key_out:inst3|OUT_show_value[12]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.487      ; 18.929     ;
; -19.266 ; key_out:inst3|OUT_value[26]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 18.903     ;
; -19.245 ; key_out:inst3|OUT_value[60]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.485      ; 18.854     ;
; -19.100 ; key_out:inst3|OUT_value[45]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.513      ; 18.737     ;
; -19.056 ; key_out:inst3|OUT_value[39]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.503      ; 18.683     ;
; -19.055 ; key_out:inst3|OUT_value[34]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.489      ; 18.668     ;
; -18.984 ; key_out:inst3|OUT_value[32]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.494      ; 18.602     ;
; -18.965 ; key_out:inst3|OUT_value[33]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.514      ; 18.603     ;
; -18.830 ; key_out:inst3|OUT_value[41]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.496      ; 18.450     ;
; -18.729 ; key_out:inst3|OUT_value[46]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.483      ; 18.336     ;
; -18.723 ; key_out:inst3|OUT_value[38]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 18.331     ;
; -18.651 ; key_out:inst3|OUT_value[50]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.483      ; 18.258     ;
; -18.498 ; key_out:inst3|OUT_value[61]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.489      ; 18.111     ;
; -18.488 ; key_out:inst3|OUT_value[35]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.498      ; 18.110     ;
; -18.441 ; key_out:inst3|OUT_value[42]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.481      ; 18.046     ;
; -18.440 ; key_out:inst3|OUT_value[54]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 18.048     ;
; -18.397 ; key_out:inst3|OUT_value[58]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 18.005     ;
; -18.305 ; key_out:inst3|OUT_value[59]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.497      ; 17.926     ;
; -18.216 ; key_out:inst3|OUT_value[40]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.485      ; 17.825     ;
; -18.189 ; key_out:inst3|OUT_value[49]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.514      ; 17.827     ;
; -18.166 ; key_out:inst3|OUT_value[43]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.498      ; 17.788     ;
; -18.130 ; key_out:inst3|OUT_value[62]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.484      ; 17.738     ;
; -18.021 ; key_out:inst3|OUT_value[48]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.485      ; 17.630     ;
; -17.993 ; key_out:inst3|OUT_value[53]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.514      ; 17.631     ;
; -17.807 ; key_out:inst3|OUT_value[57]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.514      ; 17.445     ;
; -17.469 ; key_out:inst3|OUT_value[47]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.503      ; 17.096     ;
; -17.401 ; key_out:inst3|OUT_value[56]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.485      ; 17.010     ;
; -17.292 ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.542      ; 16.958     ;
; -17.290 ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.552      ; 16.966     ;
; -17.261 ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.948     ;
; -17.186 ; serial_output:inst2|n[0]~13                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; -0.002     ; 16.808     ;
; -17.087 ; serial_output:inst2|OUT_shanke_hand~1         ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.179      ; 16.890     ;
; -17.078 ; serial_output:inst2|n[7]~1                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.175      ; 16.877     ;
; -16.986 ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.006      ; 16.616     ;
; -16.822 ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.822 ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.822 ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.822 ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.822 ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.822 ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.563      ; 16.509     ;
; -16.788 ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.176      ; 16.588     ;
; -16.786 ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.174      ; 16.584     ;
; -16.783 ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.182      ; 16.589     ;
; -16.775 ; serial_output:inst2|flag~1                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.184      ; 16.583     ;
; -16.775 ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.183      ; 16.582     ;
; -15.120 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.500        ; 3.559      ; 18.107     ;
; -14.657 ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.552      ; 14.333     ;
; -14.620 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 3.559      ; 18.107     ;
; -14.165 ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.201      ; 13.990     ;
; -8.955  ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.368      ; 8.612      ;
; -8.953  ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.378      ; 8.620      ;
; -8.927  ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.378      ; 8.594      ;
; -8.924  ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.389      ; 8.602      ;
; -8.849  ; serial_output:inst2|n[0]~13                   ; serial_output:inst2|n[6]~5    ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; -0.176     ; 8.462      ;
; -8.750  ; serial_output:inst2|OUT_shanke_hand~1         ; serial_output:inst2|n[6]~5    ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.005      ; 8.544      ;
; -8.741  ; serial_output:inst2|n[7]~1                    ; serial_output:inst2|n[6]~5    ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.001      ; 8.531      ;
; -8.649  ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|n[6]~5    ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; -0.168     ; 8.270      ;
; -8.485  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; 0.389      ; 8.163      ;
+---------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                   ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+
; -7.234 ; divider:inst|n2[0] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.274      ;
; -7.234 ; divider:inst|n2[0] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.274      ;
; -7.229 ; divider:inst|n2[0] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.269      ;
; -7.201 ; divider:inst|n2[1] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.241      ;
; -7.201 ; divider:inst|n2[1] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.241      ;
; -7.196 ; divider:inst|n2[1] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.236      ;
; -7.062 ; divider:inst|n2[2] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.102      ;
; -7.062 ; divider:inst|n2[2] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.102      ;
; -7.057 ; divider:inst|n2[2] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.097      ;
; -7.024 ; divider:inst|n2[3] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.064      ;
; -7.024 ; divider:inst|n2[3] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.064      ;
; -7.019 ; divider:inst|n2[3] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.059      ;
; -6.988 ; divider:inst|n1[0] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; -0.001     ; 8.027      ;
; -6.987 ; divider:inst|n1[0] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; -0.001     ; 8.026      ;
; -6.987 ; divider:inst|n1[0] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; -0.001     ; 8.026      ;
; -6.987 ; divider:inst|n1[0] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; -0.001     ; 8.026      ;
; -6.986 ; divider:inst|n1[0] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; -0.001     ; 8.025      ;
; -6.986 ; divider:inst|n1[0] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; -0.001     ; 8.025      ;
; -6.980 ; divider:inst|n1[4] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.020      ;
; -6.979 ; divider:inst|n1[4] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.019      ;
; -6.979 ; divider:inst|n1[4] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 8.019      ;
; -6.979 ; divider:inst|n1[4] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 8.019      ;
; -6.978 ; divider:inst|n1[4] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 8.018      ;
; -6.978 ; divider:inst|n1[4] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 8.018      ;
; -6.891 ; divider:inst|n1[1] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.930      ;
; -6.890 ; divider:inst|n1[1] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.929      ;
; -6.890 ; divider:inst|n1[1] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.929      ;
; -6.890 ; divider:inst|n1[1] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.929      ;
; -6.889 ; divider:inst|n1[1] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.928      ;
; -6.889 ; divider:inst|n1[1] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; -0.001     ; 7.928      ;
; -6.858 ; divider:inst|n2[4] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.898      ;
; -6.858 ; divider:inst|n2[4] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.898      ;
; -6.855 ; divider:inst|n2[5] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.895      ;
; -6.855 ; divider:inst|n2[5] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.895      ;
; -6.853 ; divider:inst|n2[4] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.893      ;
; -6.850 ; divider:inst|n2[5] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.890      ;
; -6.815 ; divider:inst|n1[2] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.854      ;
; -6.814 ; divider:inst|n1[2] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.853      ;
; -6.814 ; divider:inst|n1[2] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.853      ;
; -6.814 ; divider:inst|n1[2] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.853      ;
; -6.813 ; divider:inst|n1[2] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.852      ;
; -6.813 ; divider:inst|n1[2] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; -0.001     ; 7.852      ;
; -6.794 ; divider:inst|n1[0] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.834      ;
; -6.794 ; divider:inst|n1[0] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.834      ;
; -6.793 ; divider:inst|n1[0] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.833      ;
; -6.793 ; divider:inst|n1[0] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.833      ;
; -6.792 ; divider:inst|n1[0] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.832      ;
; -6.792 ; divider:inst|n1[0] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.832      ;
; -6.792 ; divider:inst|n1[0] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.832      ;
; -6.792 ; divider:inst|n1[0] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.832      ;
; -6.790 ; divider:inst|n1[0] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.830      ;
; -6.790 ; divider:inst|n1[0] ; divider:inst|n1[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.830      ;
; -6.789 ; divider:inst|n1[0] ; divider:inst|n1[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.829      ;
; -6.786 ; divider:inst|n1[4] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.001      ; 7.827      ;
; -6.786 ; divider:inst|n1[4] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.001      ; 7.827      ;
; -6.785 ; divider:inst|n1[4] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.826      ;
; -6.785 ; divider:inst|n1[4] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.826      ;
; -6.784 ; divider:inst|n1[4] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.825      ;
; -6.784 ; divider:inst|n1[4] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.001      ; 7.825      ;
; -6.784 ; divider:inst|n1[4] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.001      ; 7.825      ;
; -6.784 ; divider:inst|n1[4] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.825      ;
; -6.782 ; divider:inst|n1[4] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.823      ;
; -6.782 ; divider:inst|n1[4] ; divider:inst|n1[0]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.823      ;
; -6.781 ; divider:inst|n1[4] ; divider:inst|n1[3]    ; clk          ; clk         ; 1.000        ; 0.001      ; 7.822      ;
; -6.775 ; divider:inst|n1[7] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.815      ;
; -6.774 ; divider:inst|n1[7] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.814      ;
; -6.774 ; divider:inst|n1[7] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.814      ;
; -6.774 ; divider:inst|n1[7] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.814      ;
; -6.773 ; divider:inst|n1[7] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.813      ;
; -6.773 ; divider:inst|n1[7] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 7.813      ;
; -6.770 ; divider:inst|n2[6] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.810      ;
; -6.770 ; divider:inst|n2[6] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.810      ;
; -6.765 ; divider:inst|n2[6] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.805      ;
; -6.729 ; divider:inst|n1[3] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.768      ;
; -6.728 ; divider:inst|n1[3] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.767      ;
; -6.728 ; divider:inst|n1[3] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.767      ;
; -6.728 ; divider:inst|n1[3] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; -0.001     ; 7.767      ;
; -6.727 ; divider:inst|n1[3] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; -0.001     ; 7.766      ;
; -6.727 ; divider:inst|n1[3] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; -0.001     ; 7.766      ;
; -6.718 ; divider:inst|n2[0] ; divider:inst|n2[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.758      ;
; -6.718 ; divider:inst|n2[0] ; divider:inst|n2[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.758      ;
; -6.716 ; divider:inst|n2[0] ; divider:inst|n2[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.756      ;
; -6.713 ; divider:inst|n2[0] ; divider:inst|n2[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.753      ;
; -6.711 ; divider:inst|n2[0] ; divider:inst|OUT_clk2 ; clk          ; clk         ; 1.000        ; 0.000      ; 7.751      ;
; -6.697 ; divider:inst|n1[1] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.737      ;
; -6.697 ; divider:inst|n1[1] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.737      ;
; -6.696 ; divider:inst|n1[1] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.736      ;
; -6.696 ; divider:inst|n1[1] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.736      ;
; -6.695 ; divider:inst|n1[1] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.735      ;
; -6.695 ; divider:inst|n1[1] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.735      ;
; -6.695 ; divider:inst|n1[1] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.735      ;
; -6.695 ; divider:inst|n1[1] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.735      ;
; -6.693 ; divider:inst|n1[1] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.733      ;
; -6.693 ; divider:inst|n1[1] ; divider:inst|n1[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.733      ;
; -6.692 ; divider:inst|n1[1] ; divider:inst|n1[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.732      ;
; -6.690 ; divider:inst|n2[7] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.730      ;
; -6.690 ; divider:inst|n2[7] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.730      ;
; -6.685 ; divider:inst|n2[7] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.725      ;
; -6.685 ; divider:inst|n2[1] ; divider:inst|n2[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 7.725      ;
; -6.685 ; divider:inst|n2[1] ; divider:inst|n2[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 7.725      ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'divider:inst|OUT_clk1'                                                                                                                        ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                          ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -5.418 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.445      ;
; -5.418 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.438      ;
; -5.418 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.438      ;
; -5.418 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.438      ;
; -5.418 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.438      ;
; -5.403 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.003     ; 6.440      ;
; -5.386 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.413      ;
; -5.386 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.413      ;
; -5.386 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.413      ;
; -5.386 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.413      ;
; -5.371 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.399      ;
; -5.371 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.399      ;
; -5.364 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.015     ; 6.389      ;
; -5.334 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.362      ;
; -5.334 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.362      ;
; -5.334 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.362      ;
; -5.334 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.362      ;
; -5.157 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.184      ;
; -5.157 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.177      ;
; -5.157 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.177      ;
; -5.157 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.177      ;
; -5.157 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 6.177      ;
; -5.142 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.003     ; 6.179      ;
; -5.125 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.152      ;
; -5.125 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.152      ;
; -5.125 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.152      ;
; -5.125 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 6.152      ;
; -5.110 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.138      ;
; -5.110 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.138      ;
; -5.103 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.015     ; 6.128      ;
; -5.078 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 6.116      ;
; -5.078 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 6.116      ;
; -5.078 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[39]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 6.116      ;
; -5.073 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.101      ;
; -5.073 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.101      ;
; -5.073 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.101      ;
; -5.073 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 6.101      ;
; -5.048 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[1]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 6.080      ;
; -5.048 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 6.080      ;
; -5.048 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 6.080      ;
; -5.048 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[13] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 6.080      ;
; -4.981 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[28]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 6.033      ;
; -4.981 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[34]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 6.033      ;
; -4.981 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[17]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 6.033      ;
; -4.981 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[61]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 6.033      ;
; -4.981 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[21]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 6.033      ;
; -4.971 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.014      ; 6.025      ;
; -4.971 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[12] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.014      ; 6.025      ;
; -4.971 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[59]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.004      ; 6.015      ;
; -4.970 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[20]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.010      ; 6.020      ;
; -4.967 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[43]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.003      ; 6.010      ;
; -4.967 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[35]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.003      ; 6.010      ;
; -4.960 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[60]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.016      ; 6.016      ;
; -4.960 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[56]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.016      ; 6.016      ;
; -4.960 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[48]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.016      ; 6.016      ;
; -4.960 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[40]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.016      ; 6.016      ;
; -4.960 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[36]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.016      ; 6.016      ;
; -4.924 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[32]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.007      ; 5.971      ;
; -4.924 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[2]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.004      ; 5.968      ;
; -4.921 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[41]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.005      ; 5.966      ;
; -4.894 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.921      ;
; -4.894 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.914      ;
; -4.894 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.914      ;
; -4.894 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.914      ;
; -4.894 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.914      ;
; -4.879 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.003     ; 5.916      ;
; -4.867 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[63]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.018      ; 5.925      ;
; -4.862 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.889      ;
; -4.862 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.889      ;
; -4.862 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.889      ;
; -4.862 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.889      ;
; -4.847 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.875      ;
; -4.847 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.875      ;
; -4.840 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.015     ; 5.865      ;
; -4.821 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.848      ;
; -4.821 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.841      ;
; -4.821 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.841      ;
; -4.821 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.841      ;
; -4.821 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.020     ; 5.841      ;
; -4.817 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 5.855      ;
; -4.817 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 5.855      ;
; -4.817 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[39]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.002     ; 5.855      ;
; -4.810 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.838      ;
; -4.810 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.838      ;
; -4.810 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.838      ;
; -4.810 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 5.838      ;
; -4.806 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.003     ; 5.843      ;
; -4.796 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.028     ; 5.808      ;
; -4.796 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.035     ; 5.801      ;
; -4.796 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.035     ; 5.801      ;
; -4.796 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.035     ; 5.801      ;
; -4.796 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.035     ; 5.801      ;
; -4.789 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.816      ;
; -4.789 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.816      ;
; -4.789 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.816      ;
; -4.789 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 5.816      ;
; -4.787 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[1]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 5.819      ;
; -4.787 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 5.819      ;
; -4.787 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 5.819      ;
; -4.787 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[13] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.008     ; 5.819      ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'divider:inst|OUT_clk2'                                                                                                                                                  ;
+--------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                             ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; -1.191 ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.546     ; 1.185      ;
; -1.008 ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.380     ; 1.168      ;
; -1.005 ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.389     ; 1.156      ;
; -1.001 ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.387     ; 1.154      ;
; -0.997 ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.381     ; 1.156      ;
; -0.923 ; serial_output:inst2|flag~1            ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.379     ; 1.084      ;
; -0.864 ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.544     ; 0.860      ;
; -0.694 ; serial_output:inst2|OUT_ser~1         ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.542     ; 0.692      ;
; -0.691 ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.388     ; 0.843      ;
; -0.664 ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.351     ; 0.853      ;
; 0.048  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; -0.384     ; 0.108      ;
+--------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node               ; Launch Clock          ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+
; -2.611 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; clk         ; 0.000        ; 2.806      ; 0.805      ;
; -2.594 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; clk         ; 0.000        ; 2.789      ; 0.805      ;
; -2.111 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; clk         ; -0.500       ; 2.806      ; 0.805      ;
; -2.094 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; clk         ; -0.500       ; 2.789      ; 0.805      ;
; 0.733  ; divider:inst|n1[31]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 1.039      ;
; 0.733  ; divider:inst|n2[31]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 1.039      ;
; 1.690  ; divider:inst|n2[31]   ; divider:inst|n2[26]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 1.997      ;
; 1.693  ; divider:inst|n2[31]   ; divider:inst|n2[29]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.000      ;
; 1.693  ; divider:inst|n2[31]   ; divider:inst|n2[21]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.000      ;
; 1.693  ; divider:inst|n2[31]   ; divider:inst|n2[22]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.000      ;
; 1.693  ; divider:inst|n2[31]   ; divider:inst|n2[27]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.000      ;
; 1.694  ; divider:inst|n2[31]   ; divider:inst|n2[18]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.001      ;
; 1.694  ; divider:inst|n2[31]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.001      ;
; 1.695  ; divider:inst|n2[31]   ; divider:inst|n2[23]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.002      ;
; 1.695  ; divider:inst|n2[31]   ; divider:inst|n2[25]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.002      ;
; 1.695  ; divider:inst|n2[31]   ; divider:inst|n2[28]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.002      ;
; 1.696  ; divider:inst|n2[31]   ; divider:inst|n2[16]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.003      ;
; 1.696  ; divider:inst|n2[31]   ; divider:inst|n2[17]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.003      ;
; 1.697  ; divider:inst|n2[31]   ; divider:inst|n2[30]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 2.004      ;
; 1.713  ; divider:inst|n1[31]   ; divider:inst|n1[17]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.016      ;
; 1.716  ; divider:inst|n1[31]   ; divider:inst|n1[19]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.019      ;
; 1.716  ; divider:inst|n1[31]   ; divider:inst|n1[23]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.019      ;
; 1.716  ; divider:inst|n1[31]   ; divider:inst|n1[24]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.019      ;
; 1.716  ; divider:inst|n1[31]   ; divider:inst|n1[28]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.019      ;
; 1.717  ; divider:inst|n1[31]   ; divider:inst|n1[22]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.020      ;
; 1.717  ; divider:inst|n1[31]   ; divider:inst|n1[25]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.020      ;
; 1.717  ; divider:inst|n1[31]   ; divider:inst|n1[26]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.020      ;
; 1.718  ; divider:inst|n1[31]   ; divider:inst|n1[29]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.021      ;
; 1.718  ; divider:inst|n1[31]   ; divider:inst|n1[30]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.021      ;
; 1.718  ; divider:inst|n1[31]   ; divider:inst|n1[16]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.021      ;
; 1.718  ; divider:inst|n1[31]   ; divider:inst|n1[20]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.021      ;
; 1.718  ; divider:inst|n1[31]   ; divider:inst|n1[27]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.021      ;
; 1.719  ; divider:inst|n1[31]   ; divider:inst|n1[18]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.022      ;
; 1.719  ; divider:inst|n1[31]   ; divider:inst|n1[21]   ; clk                   ; clk         ; 0.000        ; -0.003     ; 2.022      ;
; 1.935  ; divider:inst|n2[30]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.240      ;
; 1.937  ; divider:inst|n1[30]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.246      ;
; 1.997  ; divider:inst|n2[29]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.302      ;
; 2.036  ; divider:inst|n1[29]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.345      ;
; 2.075  ; divider:inst|n2[31]   ; divider:inst|n2[11]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.384      ;
; 2.078  ; divider:inst|n2[31]   ; divider:inst|n2[13]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.387      ;
; 2.082  ; divider:inst|n2[31]   ; divider:inst|n2[14]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.391      ;
; 2.084  ; divider:inst|n2[31]   ; divider:inst|n2[12]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.393      ;
; 2.085  ; divider:inst|n2[31]   ; divider:inst|n2[15]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.394      ;
; 2.113  ; divider:inst|n2[28]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.418      ;
; 2.115  ; divider:inst|n1[28]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.424      ;
; 2.193  ; divider:inst|n1[27]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.502      ;
; 2.200  ; divider:inst|n2[24]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.506      ;
; 2.205  ; divider:inst|n2[27]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.510      ;
; 2.231  ; divider:inst|n2[31]   ; divider:inst|n2[3]    ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.540      ;
; 2.231  ; divider:inst|n2[31]   ; divider:inst|n2[8]    ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.540      ;
; 2.248  ; divider:inst|n2[26]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.553      ;
; 2.295  ; divider:inst|n1[26]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.604      ;
; 2.373  ; divider:inst|n1[25]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.682      ;
; 2.385  ; divider:inst|n2[25]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.690      ;
; 2.436  ; divider:inst|n2[23]   ; divider:inst|n2[23]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.742      ;
; 2.442  ; divider:inst|n2[15]   ; divider:inst|n2[15]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.748      ;
; 2.445  ; divider:inst|n1[23]   ; divider:inst|n1[23]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.751      ;
; 2.477  ; divider:inst|n2[29]   ; divider:inst|n2[29]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.783      ;
; 2.479  ; divider:inst|n2[0]    ; divider:inst|n2[0]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.785      ;
; 2.509  ; divider:inst|n2[31]   ; divider:inst|n2[4]    ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.818      ;
; 2.510  ; divider:inst|n1[24]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.819      ;
; 2.517  ; divider:inst|n1[16]   ; divider:inst|n1[16]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.823      ;
; 2.521  ; divider:inst|n1[29]   ; divider:inst|n1[29]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.827      ;
; 2.525  ; divider:inst|n1[0]    ; divider:inst|n1[0]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.831      ;
; 2.533  ; divider:inst|n2[21]   ; divider:inst|n2[21]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.839      ;
; 2.538  ; divider:inst|n2[16]   ; divider:inst|n2[16]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.844      ;
; 2.561  ; divider:inst|n2[22]   ; divider:inst|n2[22]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.867      ;
; 2.567  ; divider:inst|n1[24]   ; divider:inst|n1[24]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.873      ;
; 2.567  ; divider:inst|n1[22]   ; divider:inst|n1[22]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.873      ;
; 2.569  ; divider:inst|n1[20]   ; divider:inst|n1[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.875      ;
; 2.572  ; divider:inst|n1[21]   ; divider:inst|n1[21]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.878      ;
; 2.575  ; divider:inst|n2[20]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.881      ;
; 2.637  ; divider:inst|n1[31]   ; divider:inst|n1[7]    ; clk                   ; clk         ; 0.000        ; -0.007     ; 2.936      ;
; 2.637  ; divider:inst|n1[31]   ; divider:inst|n1[9]    ; clk                   ; clk         ; 0.000        ; -0.007     ; 2.936      ;
; 2.638  ; divider:inst|n1[31]   ; divider:inst|n1[4]    ; clk                   ; clk         ; 0.000        ; -0.007     ; 2.937      ;
; 2.640  ; divider:inst|n1[31]   ; divider:inst|n1[15]   ; clk                   ; clk         ; 0.000        ; -0.007     ; 2.939      ;
; 2.640  ; divider:inst|n1[31]   ; divider:inst|n1[14]   ; clk                   ; clk         ; 0.000        ; -0.007     ; 2.939      ;
; 2.655  ; divider:inst|n2[14]   ; divider:inst|n2[14]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 2.961      ;
; 2.660  ; divider:inst|n2[23]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 2.965      ;
; 2.664  ; divider:inst|n1[23]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 2.973      ;
; 2.696  ; divider:inst|n2[26]   ; divider:inst|n2[26]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.002      ;
; 2.714  ; divider:inst|n2[31]   ; divider:inst|n2[24]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.020      ;
; 2.722  ; divider:inst|n2[31]   ; divider:inst|n2[19]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.028      ;
; 2.729  ; divider:inst|n2[11]   ; divider:inst|n2[11]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.035      ;
; 2.737  ; divider:inst|n2[19]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.043      ;
; 2.741  ; divider:inst|n1[17]   ; divider:inst|n1[17]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.047      ;
; 2.741  ; divider:inst|n1[25]   ; divider:inst|n1[25]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.047      ;
; 2.742  ; divider:inst|n2[28]   ; divider:inst|n2[28]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.048      ;
; 2.742  ; divider:inst|n1[28]   ; divider:inst|n1[28]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.048      ;
; 2.746  ; divider:inst|n2[19]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 3.053      ;
; 2.748  ; divider:inst|n1[26]   ; divider:inst|n1[26]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.054      ;
; 2.750  ; divider:inst|n1[19]   ; divider:inst|n1[19]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.056      ;
; 2.750  ; divider:inst|n2[4]    ; divider:inst|n2[4]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.056      ;
; 2.752  ; divider:inst|n2[25]   ; divider:inst|n2[25]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.058      ;
; 2.769  ; divider:inst|n2[8]    ; divider:inst|n2[8]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.075      ;
; 2.775  ; divider:inst|n2[13]   ; divider:inst|n2[13]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.081      ;
; 2.776  ; divider:inst|n2[12]   ; divider:inst|n2[12]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.082      ;
; 2.780  ; divider:inst|n2[3]    ; divider:inst|n2[3]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.086      ;
; 2.783  ; divider:inst|n2[2]    ; divider:inst|n2[2]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 3.089      ;
; 2.784  ; divider:inst|n1[22]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.003      ; 3.093      ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'divider:inst|OUT_clk1'                                                                                                                                              ;
+--------+-----------------------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                                     ; To Node                          ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; -1.537 ; key_out:inst3|OUT_finish                      ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1 ; 0.000        ; 3.041      ; 2.114      ;
; -1.037 ; key_out:inst3|OUT_finish                      ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1 ; -0.500       ; 3.041      ; 2.114      ;
; 0.499  ; keyboard:inst5|flag[0]                        ; keyboard:inst5|flag[0]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; keyboard:inst5|flag[1]                        ; keyboard:inst5|flag[1]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.805      ;
; 0.755  ; keyboard:inst5|OUT_key                        ; anti_shake:inst4|state           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.061      ;
; 0.758  ; key_out:inst3|OUT_value[17]                   ; key_out:inst3|OUT_value[21]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.064      ;
; 0.773  ; key_out:inst3|OUT_value[46]                   ; key_out:inst3|OUT_value[50]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.079      ;
; 0.793  ; keyboard:inst5|OUT_value[3]                   ; anti_shake:inst4|OUT_key         ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.099      ;
; 0.797  ; key_out:inst3|OUT_show_value[4]               ; key_out:inst3|OUT_show_value[0]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.103      ;
; 0.803  ; key_out:inst3|OUT_show_value[4]               ; key_out:inst3|OUT_show_value[8]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.109      ;
; 0.936  ; key_out:inst3|OUT_value[23]                   ; key_out:inst3|OUT_value[19]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.242      ;
; 0.938  ; key_out:inst3|OUT_value[23]                   ; key_out:inst3|OUT_value[27]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.244      ;
; 0.957  ; key_out:inst3|OUT_show_value[15]              ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.263      ;
; 0.959  ; key_out:inst3|OUT_value[22]                   ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.265      ;
; 0.961  ; key_out:inst3|OUT_show_value[1]               ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.267      ;
; 0.968  ; key_out:inst3|OUT_show_value[9]               ; key_out:inst3|OUT_show_value[13] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.274      ;
; 0.972  ; key_out:inst3|OUT_show_value[11]              ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.278      ;
; 1.067  ; key_out:inst3|OUT_value[50]                   ; key_out:inst3|OUT_value[46]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.373      ;
; 1.070  ; key_out:inst3|OUT_value[28]                   ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 1.378      ;
; 1.081  ; key_out:inst3|OUT_value[50]                   ; key_out:inst3|OUT_value[54]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 1.386      ;
; 1.093  ; key_out:inst3|OUT_show_value[0]               ; key_out:inst3|OUT_show_value[4]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.399      ;
; 1.175  ; keyboard:inst5|flag[0]                        ; keyboard:inst5|flag[1]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.481      ;
; 1.176  ; key_out:inst3|OUT_value[51]                   ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.482      ;
; 1.183  ; key_out:inst3|OUT_value[21]                   ; key_out:inst3|OUT_value[17]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.489      ;
; 1.187  ; key_out:inst3|OUT_value[53]                   ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.493      ;
; 1.196  ; key_out:inst3|OUT_value[57]                   ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.502      ;
; 1.197  ; key_out:inst3|OUT_value[62]                   ; key_out:inst3|OUT_value[58]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.503      ;
; 1.197  ; key_out:inst3|OUT_show_value[13]              ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.503      ;
; 1.198  ; key_out:inst3|OUT_show_value[5]               ; key_out:inst3|OUT_show_value[1]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.504      ;
; 1.201  ; key_out:inst3|OUT_value[58]                   ; key_out:inst3|OUT_value[54]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.507      ;
; 1.202  ; key_out:inst3|OUT_value[58]                   ; key_out:inst3|OUT_value[62]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.508      ;
; 1.206  ; key_out:inst3|OUT_value[26]                   ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.512      ;
; 1.210  ; key_out:inst3|OUT_show_value[7]               ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.516      ;
; 1.215  ; key_out:inst3|OUT_show_value[10]              ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.521      ;
; 1.215  ; key_out:inst3|OUT_show_value[7]               ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.521      ;
; 1.223  ; keyboard:inst5|OUT_value[0]                   ; anti_shake:inst4|temp_value[0]   ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.529      ;
; 1.225  ; key_out:inst3|OUT_show_value[11]              ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.531      ;
; 1.226  ; key_out:inst3|OUT_number[2]                   ; key_out:inst3|OUT_number[2]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.532      ;
; 1.233  ; key_out:inst3|OUT_value[27]                   ; key_out:inst3|OUT_value[31]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.539      ;
; 1.235  ; key_out:inst3|OUT_value[27]                   ; key_out:inst3|OUT_value[23]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.541      ;
; 1.241  ; key_out:inst3|OUT_value[47]                   ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.547      ;
; 1.249  ; key_out:inst3|OUT_value[40]                   ; key_out:inst3|OUT_value[36]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.555      ;
; 1.250  ; key_out:inst3|OUT_value[29]                   ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.012      ; 1.568      ;
; 1.250  ; key_out:inst3|OUT_value[54]                   ; key_out:inst3|OUT_value[58]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.556      ;
; 1.256  ; key_out:inst3|OUT_value[36]                   ; key_out:inst3|OUT_value[40]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.562      ;
; 1.258  ; key_out:inst3|OUT_value[60]                   ; key_out:inst3|OUT_value[56]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.564      ;
; 1.260  ; display:inst1|state.S1                        ; display:inst1|state.S2           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 1.565      ;
; 1.265  ; key_out:inst3|OUT_show_value[8]               ; key_out:inst3|OUT_show_value[4]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.571      ;
; 1.265  ; key_out:inst3|OUT_show_value[5]               ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.571      ;
; 1.266  ; key_out:inst3|OUT_show_value[9]               ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.572      ;
; 1.267  ; key_out:inst3|OUT_value[18]                   ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 1.574      ;
; 1.271  ; key_out:inst3|OUT_show_value[6]               ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.577      ;
; 1.273  ; key_out:inst3|OUT_show_value[3]               ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.579      ;
; 1.409  ; key_out:inst3|OUT_value[16]                   ; key_out:inst3|OUT_show_value[12] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.005      ; 1.720      ;
; 1.468  ; key_out:inst3|OUT_number[4]                   ; key_out:inst3|OUT_number[4]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.774      ;
; 1.471  ; key_out:inst3|OUT_value[45]                   ; key_out:inst3|OUT_value[41]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.017      ; 1.794      ;
; 1.480  ; display:inst1|state.00                        ; keyboard:inst5|OUT_col[2]        ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 1.788      ;
; 1.497  ; key_out:inst3|OUT_value[31]                   ; key_out:inst3|OUT_value[27]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.803      ;
; 1.498  ; display:inst1|state.S1                        ; keyboard:inst5|OUT_value[0]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 1.805      ;
; 1.502  ; key_out:inst3|OUT_value[38]                   ; key_out:inst3|OUT_value[34]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.005     ; 1.803      ;
; 1.512  ; key_out:inst3|OUT_number[3]                   ; key_out:inst3|OUT_number[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.818      ;
; 1.515  ; key_out:inst3|OUT_value[29]                   ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 1.823      ;
; 1.520  ; key_out:inst3|OUT_number[1]                   ; key_out:inst3|OUT_number[1]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.826      ;
; 1.532  ; key_out:inst3|OUT_value[33]                   ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 1.836      ;
; 1.547  ; key_out:inst3|OUT_value[54]                   ; key_out:inst3|OUT_value[50]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 1.854      ;
; 1.554  ; key_out:inst3|OUT_value[46]                   ; key_out:inst3|OUT_value[42]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 1.862      ;
; 1.563  ; key_out:inst3|OUT_value[49]                   ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.869      ;
; 1.579  ; display:inst1|state.S2                        ; display:inst1|state.S3           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.885      ;
; 1.603  ; key_out:inst3|OUT_value[19]                   ; key_out:inst3|OUT_value[23]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 1.909      ;
; 1.627  ; display:inst1|state.S3                        ; display:inst1|state.00           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 1.935      ;
; 1.628  ; key_out:inst3|OUT_value[37]                   ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 1.933      ;
; 1.629  ; key_out:inst3|OUT_value[42]                   ; key_out:inst3|OUT_value[38]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.003     ; 1.932      ;
; 1.633  ; key_out:inst3|OUT_show_value[12]              ; key_out:inst3|OUT_value[16]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.005     ; 1.934      ;
; 1.652  ; key_out:inst3|OUT_value[52]                   ; key_out:inst3|OUT_value[48]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 1.957      ;
; 1.657  ; key_out:inst3|OUT_value[52]                   ; key_out:inst3|OUT_value[56]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 1.962      ;
; 1.674  ; key_out:inst3|OUT_value[59]                   ; key_out:inst3|OUT_value[63]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.014      ; 1.994      ;
; 1.684  ; key_out:inst3|OUT_value[41]                   ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.017     ; 1.973      ;
; 1.709  ; key_out:inst3|OUT_value[63]                   ; key_out:inst3|OUT_value[59]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.014     ; 2.001      ;
; 1.710  ; key_out:inst3|OUT_value[44]                   ; key_out:inst3|OUT_value[40]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 2.015      ;
; 1.714  ; key_out:inst3|OUT_value[25]                   ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.012     ; 2.008      ;
; 1.731  ; display:inst1|state.00                        ; display:inst1|state.S1           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 2.036      ;
; 1.763  ; keyboard:inst5|OUT_key                        ; keyboard:inst5|OUT_key           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 2.069      ;
; 1.780  ; keyboard:inst5|OUT_value[3]                   ; keyboard:inst5|OUT_value[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 2.086      ;
; 1.802  ; anti_shake:inst4|temp_value[3]                ; anti_shake:inst4|OUT_key         ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 2.108      ;
; 1.814  ; key_out:inst3|OUT_number[2]                   ; key_out:inst3|OUT_number[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 2.120      ;
; 1.824  ; key_out:inst3|OUT_value[24]                   ; key_out:inst3|OUT_value[28]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 2.128      ;
; 1.829  ; key_out:inst3|OUT_value[20]                   ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.004      ; 2.139      ;
; 1.837  ; key_out:inst3|OUT_value[59]                   ; key_out:inst3|OUT_value[55]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.013      ; 2.156      ;
; 1.845  ; key_out:inst3|OUT_value[57]                   ; key_out:inst3|OUT_value[61]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.025      ; 2.176      ;
; 1.851  ; key_out:inst3|OUT_value[38]                   ; key_out:inst3|OUT_value[42]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.003      ; 2.160      ;
; 1.853  ; keyboard:inst5|OUT_value[2]                   ; key_out:inst3|OUT_value[62]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 2.161      ;
; 1.862  ; key_out:inst3|OUT_number[0]                   ; key_out:inst3|OUT_number[0]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 2.168      ;
; 1.862  ; key_out:inst3|OUT_value[18]                   ; key_out:inst3|OUT_show_value[14] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.031      ; 2.199      ;
; 1.864  ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish         ; divider:inst|OUT_clk2    ; divider:inst|OUT_clk1 ; 0.000        ; 0.045      ; 2.215      ;
; 1.870  ; anti_shake:inst4|temp_value[1]                ; anti_shake:inst4|OUT_key         ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.006      ; 2.182      ;
; 1.870  ; key_out:inst3|OUT_value[37]                   ; key_out:inst3|OUT_value[41]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.017      ; 2.193      ;
; 1.871  ; key_out:inst3|OUT_value[24]                   ; key_out:inst3|OUT_value[20]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.004     ; 2.173      ;
; 1.878  ; key_out:inst3|OUT_value[33]                   ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 2.185      ;
; 1.881  ; key_out:inst3|OUT_value[45]                   ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 2.186      ;
; 1.883  ; key_out:inst3|OUT_show_value[12]              ; key_out:inst3|OUT_show_value[8]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.005     ; 2.184      ;
+--------+-----------------------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'key_out:inst3|OUT_finish'                                                                                                                                                   ;
+--------+-----------------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack  ; From Node                                     ; To Node                               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; -0.723 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.380      ; 2.961      ;
; -0.433 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.384      ; 3.255      ;
; -0.223 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.380      ; 2.961      ;
; 0.067  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.384      ; 3.255      ;
; 0.213  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.561      ; 4.078      ;
; 0.465  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.377      ; 4.146      ;
; 0.467  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.375      ; 4.146      ;
; 0.498  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.383      ; 4.185      ;
; 0.713  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.561      ; 4.078      ;
; 0.740  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.376      ; 4.420      ;
; 0.852  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.559      ; 4.715      ;
; 0.965  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.377      ; 4.146      ;
; 0.967  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.375      ; 4.146      ;
; 0.998  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.383      ; 4.185      ;
; 1.040  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 3.553      ; 4.897      ;
; 1.240  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.376      ; 4.420      ;
; 1.352  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.559      ; 4.715      ;
; 1.540  ; key_out:inst3|OUT_finish                      ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 3.553      ; 4.897      ;
; 2.533  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.022      ; 2.555      ;
; 2.536  ; serial_output:inst2|flag~1                    ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.005      ; 2.541      ;
; 2.536  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 2.540      ;
; 2.544  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.003      ; 2.547      ;
; 2.547  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.005     ; 2.542      ;
; 2.549  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.003     ; 2.546      ;
; 2.583  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.583  ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.583  ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.583  ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.583  ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.583  ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.467      ;
; 2.747  ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.173     ; 2.574      ;
; 2.823  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.026      ; 2.849      ;
; 2.826  ; serial_output:inst2|flag~1                    ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.009      ; 2.835      ;
; 2.826  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.008      ; 2.834      ;
; 2.834  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.007      ; 2.841      ;
; 2.837  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 2.836      ;
; 2.839  ; serial_output:inst2|n[7]~1                    ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.004     ; 2.835      ;
; 2.839  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 2.840      ;
; 2.848  ; serial_output:inst2|OUT_shanke_hand~1         ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 2.848      ;
; 2.873  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.873  ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.873  ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.873  ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.873  ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.873  ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 2.761      ;
; 2.947  ; serial_output:inst2|n[0]~13                   ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.181     ; 2.766      ;
; 3.022  ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.384      ; 2.906      ;
; 3.025  ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.373      ; 2.898      ;
; 3.037  ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.169     ; 2.868      ;
; 3.051  ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.373      ; 2.924      ;
; 3.053  ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|OUT_shanke_hand~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.363      ; 2.916      ;
; 3.129  ; serial_output:inst2|n[7]~1                    ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 3.129      ;
; 3.138  ; serial_output:inst2|OUT_shanke_hand~1         ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 3.142      ;
; 3.237  ; serial_output:inst2|n[0]~13                   ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.177     ; 3.060      ;
; 3.312  ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.388      ; 3.200      ;
; 3.315  ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.377      ; 3.192      ;
; 3.341  ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.377      ; 3.218      ;
; 3.343  ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|n[7]~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.367      ; 3.210      ;
; 3.469  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.203      ; 3.672      ;
; 3.472  ; serial_output:inst2|flag~1                    ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.186      ; 3.658      ;
; 3.472  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.185      ; 3.657      ;
; 3.480  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.184      ; 3.664      ;
; 3.483  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.176      ; 3.659      ;
; 3.485  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.178      ; 3.663      ;
; 3.519  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.519  ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.519  ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.519  ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.519  ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.519  ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|n[0]~13           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.565      ; 3.584      ;
; 3.683  ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.008      ; 3.691      ;
; 3.721  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.019      ; 3.740      ;
; 3.723  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.017      ; 3.740      ;
; 3.724  ; serial_output:inst2|flag~1                    ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.002      ; 3.726      ;
; 3.724  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 3.725      ;
; 3.726  ; serial_output:inst2|flag~1                    ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 3.726      ;
; 3.726  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 3.725      ;
; 3.732  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 3.732      ;
; 3.734  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.002     ; 3.732      ;
; 3.735  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.008     ; 3.727      ;
; 3.737  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.006     ; 3.731      ;
; 3.737  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.010     ; 3.727      ;
; 3.739  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.008     ; 3.731      ;
; 3.754  ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.025      ; 3.779      ;
; 3.757  ; serial_output:inst2|flag~1                    ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.008      ; 3.765      ;
; 3.757  ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.007      ; 3.764      ;
; 3.765  ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.006      ; 3.771      ;
; 3.768  ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.002     ; 3.766      ;
; 3.770  ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 3.770      ;
; 3.771  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.771  ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.771  ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.771  ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.771  ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.771  ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|n[4]~29           ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.381      ; 3.652      ;
; 3.773  ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|flag~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.379      ; 3.652      ;
; 3.773  ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|flag~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.379      ; 3.652      ;
; 3.773  ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|flag~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.379      ; 3.652      ;
; 3.773  ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|flag~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.379      ; 3.652      ;
; 3.773  ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|flag~1            ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; -0.500       ; 0.379      ; 3.652      ;
+--------+-----------------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'divider:inst|OUT_clk2'                                                                                                                                                  ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.686 ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.384     ; 0.108      ;
; 1.398 ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.351     ; 0.853      ;
; 1.425 ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.388     ; 0.843      ;
; 1.428 ; serial_output:inst2|OUT_ser~1         ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.542     ; 0.692      ;
; 1.598 ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.544     ; 0.860      ;
; 1.657 ; serial_output:inst2|flag~1            ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.379     ; 1.084      ;
; 1.731 ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.381     ; 1.156      ;
; 1.735 ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.387     ; 1.154      ;
; 1.739 ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.389     ; 1.156      ;
; 1.742 ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.380     ; 1.168      ;
; 1.925 ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; -0.546     ; 1.185      ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'divider:inst|OUT_clk2'                                                                                                                                  ;
+--------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.534 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 2.996      ; 4.374      ;
; -0.524 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 3.007      ; 4.375      ;
; -0.524 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 3.007      ; 4.375      ;
; -0.524 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 3.017      ; 4.385      ;
; -0.524 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 3.017      ; 4.385      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.034 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 2.996      ; 4.374      ;
; -0.024 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 3.007      ; 4.375      ;
; -0.024 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 3.007      ; 4.375      ;
; -0.024 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 3.017      ; 4.385      ;
; -0.024 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 3.017      ; 4.385      ;
+--------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'divider:inst|OUT_clk2'                                                                                                                                  ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.758 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 3.007      ; 4.375      ;
; 0.758 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 3.007      ; 4.375      ;
; 0.758 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 3.017      ; 4.385      ;
; 0.758 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 3.017      ; 4.385      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 0.768 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 2.996      ; 4.374      ;
; 1.258 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 3.007      ; 4.375      ;
; 1.258 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 3.007      ; 4.375      ;
; 1.258 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 3.017      ; 4.385      ;
; 1.258 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 3.017      ; 4.385      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
; 1.268 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 2.996      ; 4.374      ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; -1.941 ; 1.000        ; 2.941          ; Port Rate        ; clk   ; Rise       ; clk                   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|OUT_clk1 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|OUT_clk1 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|OUT_clk2 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|OUT_clk2 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[10]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[10]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[11]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[11]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[12]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[12]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[13]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[13]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[14]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[14]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[15]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[15]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[16]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[16]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[17]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[17]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[18]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[18]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[19]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[19]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[20]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[20]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[21]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[21]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[22]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[22]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[23]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[23]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[24]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[24]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[25]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[25]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[26]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[26]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[27]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[27]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[28]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[28]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[29]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[29]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[2]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[2]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[30]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[30]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[31]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[31]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[3]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[3]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[4]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[4]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[5]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[5]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[6]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[6]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[7]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[7]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[8]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[8]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[9]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[9]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[10]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[10]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[11]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[11]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[12]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[12]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[13]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[13]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[14]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[14]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[15]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[15]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[16]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[16]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[17]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[17]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[18]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[18]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[19]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[19]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[20]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[20]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[21]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[21]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[22]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[22]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[23]   ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'divider:inst|OUT_clk1'                                                                           ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                           ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|OUT_key         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|OUT_key         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|state           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|state           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[0]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[0]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[1]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[1]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[2]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[2]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[3]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[3]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.00           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.00           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S1           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S1           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S2           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S2           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S3           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S3           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_finish         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_finish         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[0]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[0]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[10] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[10] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[11] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[11] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[12] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[12] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[13] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[13] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[14] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[14] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[15] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[15] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[1]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[1]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[2]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[2]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[3]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[3]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[4]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[4]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[5]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[5]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[6]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[6]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[7]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[7]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[8]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[8]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[9]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[9]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[16]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[16]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[17]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[17]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[18]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[18]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[19]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[19]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[20]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[20]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[21]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[21]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[22]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[22]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[23]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[23]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[24]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[24]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[25]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[25]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[26]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[26]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[27]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[27]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[28]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[28]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[29]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[29]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[30]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[30]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[31]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[31]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[32]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[32]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[33]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[33]      ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'divider:inst|OUT_clk2'                                                                                        ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                        ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_ser~_emulated         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_ser~_emulated         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_shanke_hand~_emulated ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_shanke_hand~_emulated ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|flag~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|flag~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[0]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[0]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[1]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[1]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[2]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[2]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[3]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[3]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[4]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[4]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[5]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[5]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[6]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[6]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[7]~_emulated            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[7]~_emulated            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_ser~_emulated|clk                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_ser~_emulated|clk                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_shanke_hand~_emulated|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_shanke_hand~_emulated|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|flag~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|flag~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[0]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[0]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[1]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[1]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[2]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[2]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[3]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[3]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[4]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[4]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[5]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[5]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[6]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[6]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[7]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[7]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2|regout                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2|regout                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|outclk                  ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'key_out:inst3|OUT_finish'                                                                               ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                    ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_ser~1|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_ser~1|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_shanke_hand~1|datad         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_shanke_hand~1|datad         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|flag~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|flag~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[0]~13|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[0]~13|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[1]~9|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[1]~9|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[2]~17|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[2]~17|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[3]~21|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[3]~21|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[4]~29|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[4]~29|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[5]~25|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[5]~25|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[6]~5|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[6]~5|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[7]~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[7]~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish|regout               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish|regout               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_ser~1         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_ser~1         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_shanke_hand~1 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_shanke_hand~1 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|flag~1            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|flag~1            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[0]~13           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[0]~13           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[1]~9            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[1]~9            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[2]~17           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[2]~17           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[3]~21           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[3]~21           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[4]~29           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[4]~29           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[5]~25           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[5]~25           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[6]~5            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[6]~5            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[7]~1            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[7]~1            ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+


+------------------------------------------------------------------------------------------+
; Setup Times                                                                              ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise   ; Fall   ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; 11.925 ; 11.925 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; 11.925 ; 11.925 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; 10.723 ; 10.723 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; 11.318 ; 11.318 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; 11.223 ; 11.223 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+--------+--------+------------+-----------------------+


+------------------------------------------------------------------------------------------+
; Hold Times                                                                               ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise   ; Fall   ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; -5.922 ; -5.922 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; -6.640 ; -6.640 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; -5.922 ; -5.922 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; -7.189 ; -7.189 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; -6.877 ; -6.877 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+--------+--------+------------+-----------------------+


+-------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                           ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise   ; Fall   ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 8.714  ; 8.714  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 8.330  ; 8.330  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 8.377  ; 8.377  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 8.424  ; 8.424  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 8.714  ; 8.714  ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 8.316  ; 8.316  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 7.136  ; 7.136  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 7.182  ; 7.182  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 8.316  ; 8.316  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 7.541  ; 7.541  ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 15.525 ; 15.525 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 14.498 ; 14.498 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 14.246 ; 14.246 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 14.546 ; 14.546 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 14.552 ; 14.552 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 15.125 ; 15.125 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 15.525 ; 15.525 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 14.793 ; 14.793 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 33.427 ; 33.427 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 27.991 ; 27.991 ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 25.819 ; 25.819 ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 28.385 ; 28.385 ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+--------+--------+------------+--------------------------+


+-------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                   ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise   ; Fall   ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 8.330  ; 8.330  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 8.330  ; 8.330  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 8.377  ; 8.377  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 8.424  ; 8.424  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 8.714  ; 8.714  ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 7.136  ; 7.136  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 7.136  ; 7.136  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 7.182  ; 7.182  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 8.316  ; 8.316  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 7.541  ; 7.541  ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 10.328 ; 10.328 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 10.558 ; 10.558 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 10.340 ; 10.340 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 10.960 ; 10.960 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 11.080 ; 11.080 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 11.108 ; 11.108 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 11.393 ; 11.393 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 10.328 ; 10.328 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 17.244 ; 17.244 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 10.850 ; 10.850 ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 9.078  ; 9.078  ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 9.078  ; 9.078  ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+--------+--------+------------+--------------------------+


+---------------------------------------------------+
; Fast Model Setup Summary                          ;
+--------------------------+--------+---------------+
; Clock                    ; Slack  ; End Point TNS ;
+--------------------------+--------+---------------+
; key_out:inst3|OUT_finish ; -6.670 ; -21.697       ;
; clk                      ; -1.829 ; -96.738       ;
; divider:inst|OUT_clk1    ; -1.147 ; -68.250       ;
; divider:inst|OUT_clk2    ; 0.188  ; 0.000         ;
+--------------------------+--------+---------------+


+---------------------------------------------------+
; Fast Model Hold Summary                           ;
+--------------------------+--------+---------------+
; Clock                    ; Slack  ; End Point TNS ;
+--------------------------+--------+---------------+
; clk                      ; -1.415 ; -2.817        ;
; divider:inst|OUT_clk1    ; -0.937 ; -0.937        ;
; key_out:inst3|OUT_finish ; -0.520 ; -1.578        ;
; divider:inst|OUT_clk2    ; 0.289  ; 0.000         ;
+--------------------------+--------+---------------+


+-----------------------------------------------+
; Fast Model Recovery Summary                   ;
+-----------------------+-------+---------------+
; Clock                 ; Slack ; End Point TNS ;
+-----------------------+-------+---------------+
; divider:inst|OUT_clk2 ; 0.252 ; 0.000         ;
+-----------------------+-------+---------------+


+-----------------------------------------------+
; Fast Model Removal Summary                    ;
+-----------------------+-------+---------------+
; Clock                 ; Slack ; End Point TNS ;
+-----------------------+-------+---------------+
; divider:inst|OUT_clk2 ; 0.124 ; 0.000         ;
+-----------------------+-------+---------------+


+---------------------------------------------------+
; Fast Model Minimum Pulse Width Summary            ;
+--------------------------+--------+---------------+
; Clock                    ; Slack  ; End Point TNS ;
+--------------------------+--------+---------------+
; clk                      ; -1.380 ; -67.380       ;
; divider:inst|OUT_clk1    ; -0.500 ; -91.000       ;
; divider:inst|OUT_clk2    ; -0.500 ; -11.000       ;
; key_out:inst3|OUT_finish ; 0.500  ; 0.000         ;
+--------------------------+--------+---------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'key_out:inst3|OUT_finish'                                                                                                                                          ;
+--------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack  ; From Node                                     ; To Node                       ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; -6.670 ; key_out:inst3|OUT_number[1]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.789      ;
; -6.592 ; key_out:inst3|OUT_number[0]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.711      ;
; -6.555 ; key_out:inst3|OUT_number[2]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.674      ;
; -6.530 ; key_out:inst3|OUT_number[3]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.649      ;
; -6.477 ; key_out:inst3|OUT_number[4]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.596      ;
; -6.317 ; key_out:inst3|OUT_value[17]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.004      ; 6.425      ;
; -6.153 ; key_out:inst3|OUT_value[21]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.004      ; 6.261      ;
; -6.112 ; key_out:inst3|OUT_show_value[1]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.019      ; 6.235      ;
; -6.091 ; key_out:inst3|OUT_show_value[5]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.019      ; 6.214      ;
; -6.065 ; key_out:inst3|OUT_value[27]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 6.169      ;
; -6.062 ; key_out:inst3|OUT_value[52]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 6.164      ;
; -6.039 ; key_out:inst3|OUT_show_value[0]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.006      ; 6.149      ;
; -6.026 ; key_out:inst3|OUT_value[37]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.025      ; 6.155      ;
; -6.026 ; key_out:inst3|OUT_show_value[8]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.006      ; 6.136      ;
; -6.018 ; key_out:inst3|OUT_value[19]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 6.122      ;
; -5.992 ; key_out:inst3|OUT_show_value[10]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.027      ; 6.123      ;
; -5.991 ; key_out:inst3|OUT_value[36]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 6.095      ;
; -5.990 ; key_out:inst3|OUT_show_value[9]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.019      ; 6.113      ;
; -5.986 ; key_out:inst3|OUT_show_value[11]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.031      ; 6.121      ;
; -5.981 ; key_out:inst3|OUT_value[63]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.003     ; 6.082      ;
; -5.972 ; key_out:inst3|OUT_value[23]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 6.076      ;
; -5.958 ; key_out:inst3|OUT_show_value[7]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.031      ; 6.093      ;
; -5.923 ; key_out:inst3|OUT_show_value[3]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.031      ; 6.058      ;
; -5.890 ; key_out:inst3|OUT_value[25]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.015      ; 6.009      ;
; -5.873 ; key_out:inst3|OUT_show_value[4]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.006      ; 5.983      ;
; -5.868 ; key_out:inst3|OUT_show_value[2]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.010      ; 5.982      ;
; -5.867 ; key_out:inst3|OUT_value[24]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.003      ; 5.974      ;
; -5.863 ; key_out:inst3|OUT_value[55]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.965      ;
; -5.859 ; key_out:inst3|OUT_show_value[15]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.031      ; 5.994      ;
; -5.848 ; key_out:inst3|OUT_show_value[6]               ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.027      ; 5.979      ;
; -5.835 ; key_out:inst3|OUT_value[31]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 5.939      ;
; -5.820 ; key_out:inst3|OUT_value[44]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.922      ;
; -5.818 ; key_out:inst3|OUT_show_value[14]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.003     ; 5.919      ;
; -5.817 ; key_out:inst3|OUT_value[16]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.006      ; 5.927      ;
; -5.779 ; key_out:inst3|OUT_value[18]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.028      ; 5.911      ;
; -5.775 ; key_out:inst3|OUT_value[29]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.027      ; 5.906      ;
; -5.761 ; key_out:inst3|OUT_show_value[13]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.019      ; 5.884      ;
; -5.749 ; key_out:inst3|OUT_value[30]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.004     ; 5.849      ;
; -5.741 ; key_out:inst3|OUT_value[20]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.005      ; 5.850      ;
; -5.718 ; key_out:inst3|OUT_value[51]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.014      ; 5.836      ;
; -5.687 ; key_out:inst3|OUT_show_value[12]              ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.003      ; 5.794      ;
; -5.672 ; key_out:inst3|OUT_value[22]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.027      ; 5.803      ;
; -5.655 ; key_out:inst3|OUT_value[28]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.004      ; 5.763      ;
; -5.624 ; key_out:inst3|OUT_value[60]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 5.728      ;
; -5.600 ; key_out:inst3|OUT_value[45]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.025      ; 5.729      ;
; -5.569 ; key_out:inst3|OUT_value[26]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.027      ; 5.700      ;
; -5.550 ; key_out:inst3|OUT_value[32]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.008      ; 5.662      ;
; -5.548 ; key_out:inst3|OUT_value[39]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.014      ; 5.666      ;
; -5.547 ; key_out:inst3|OUT_value[33]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.026      ; 5.677      ;
; -5.538 ; key_out:inst3|OUT_value[41]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.011      ; 5.653      ;
; -5.493 ; key_out:inst3|OUT_value[34]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.004      ; 5.601      ;
; -5.455 ; key_out:inst3|OUT_value[61]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.004      ; 5.563      ;
; -5.385 ; key_out:inst3|OUT_value[38]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.487      ;
; -5.384 ; key_out:inst3|OUT_value[46]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.003     ; 5.485      ;
; -5.360 ; key_out:inst3|OUT_value[50]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.003     ; 5.461      ;
; -5.358 ; key_out:inst3|OUT_value[59]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.012      ; 5.474      ;
; -5.345 ; key_out:inst3|OUT_value[35]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.012      ; 5.461      ;
; -5.326 ; key_out:inst3|OUT_value[40]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 5.430      ;
; -5.321 ; key_out:inst3|OUT_value[49]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.026      ; 5.451      ;
; -5.308 ; key_out:inst3|OUT_value[42]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.004     ; 5.408      ;
; -5.290 ; key_out:inst3|OUT_value[54]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.392      ;
; -5.287 ; key_out:inst3|OUT_value[58]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.389      ;
; -5.279 ; key_out:inst3|OUT_value[53]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.026      ; 5.409      ;
; -5.274 ; key_out:inst3|OUT_value[48]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 5.378      ;
; -5.232 ; key_out:inst3|OUT_value[43]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.012      ; 5.348      ;
; -5.213 ; key_out:inst3|OUT_value[57]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.026      ; 5.343      ;
; -5.208 ; key_out:inst3|OUT_value[62]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; -0.002     ; 5.310      ;
; -5.143 ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.057     ; 5.190      ;
; -5.137 ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.047     ; 5.194      ;
; -5.114 ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.185      ;
; -5.100 ; key_out:inst3|OUT_value[56]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.000      ; 5.204      ;
; -5.069 ; key_out:inst3|OUT_value[47]                   ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0.500        ; 0.014      ; 5.187      ;
; -4.961 ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.961 ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.961 ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.961 ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.961 ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.961 ; serial_output:inst2|n[2]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.033     ; 5.032      ;
; -4.473 ; serial_output:inst2|n[0]~13                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.001      ; 5.078      ;
; -4.414 ; serial_output:inst2|OUT_shanke_hand~1         ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.068      ; 5.086      ;
; -4.413 ; serial_output:inst2|n[7]~1                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.064      ; 5.081      ;
; -4.405 ; serial_output:inst2|n[3]~21                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.009      ; 5.018      ;
; -4.400 ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|OUT_ser~1 ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.047     ; 4.457      ;
; -4.337 ; serial_output:inst2|n[6]~5                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.063      ; 5.004      ;
; -4.337 ; serial_output:inst2|n[2]~17                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.065      ; 5.006      ;
; -4.336 ; serial_output:inst2|n[4]~29                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.068      ; 5.008      ;
; -4.330 ; serial_output:inst2|flag~1                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.069      ; 5.003      ;
; -4.329 ; serial_output:inst2|n[5]~25                   ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.069      ; 5.002      ;
; -3.926 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.500        ; 1.392      ; 5.563      ;
; -3.608 ; serial_output:inst2|n[1]~9                    ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 0.072      ; 4.284      ;
; -3.426 ; key_out:inst3|OUT_finish                      ; serial_output:inst2|OUT_ser~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 1.000        ; 1.392      ; 5.563      ;
; -2.742 ; serial_output:inst2|n[0]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.120     ; 2.775      ;
; -2.736 ; serial_output:inst2|n[3]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.110     ; 2.779      ;
; -2.725 ; serial_output:inst2|n[1]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.110     ; 2.768      ;
; -2.713 ; serial_output:inst2|OUT_shanke_hand~_emulated ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.770      ;
; -2.560 ; serial_output:inst2|flag~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.617      ;
; -2.560 ; serial_output:inst2|n[7]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.617      ;
; -2.560 ; serial_output:inst2|n[6]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.617      ;
; -2.560 ; serial_output:inst2|n[5]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.617      ;
; -2.560 ; serial_output:inst2|n[4]~_emulated            ; serial_output:inst2|n[6]~5    ; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0.500        ; -0.096     ; 2.617      ;
+--------+-----------------------------------------------+-------------------------------+--------------------------+--------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                   ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+
; -1.829 ; divider:inst|n2[0] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.861      ;
; -1.829 ; divider:inst|n2[0] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.861      ;
; -1.828 ; divider:inst|n2[0] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.860      ;
; -1.801 ; divider:inst|n2[1] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.833      ;
; -1.801 ; divider:inst|n2[1] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.833      ;
; -1.800 ; divider:inst|n2[1] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.832      ;
; -1.759 ; divider:inst|n2[2] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.791      ;
; -1.759 ; divider:inst|n2[2] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.791      ;
; -1.758 ; divider:inst|n1[0] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.790      ;
; -1.758 ; divider:inst|n1[0] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.790      ;
; -1.758 ; divider:inst|n1[0] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.790      ;
; -1.758 ; divider:inst|n2[2] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.790      ;
; -1.757 ; divider:inst|n1[0] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.789      ;
; -1.757 ; divider:inst|n1[0] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.789      ;
; -1.757 ; divider:inst|n1[0] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.789      ;
; -1.747 ; divider:inst|n2[0] ; divider:inst|n2[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.779      ;
; -1.746 ; divider:inst|n2[0] ; divider:inst|n2[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.778      ;
; -1.745 ; divider:inst|n2[0] ; divider:inst|n2[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.777      ;
; -1.741 ; divider:inst|n2[0] ; divider:inst|n2[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.773      ;
; -1.740 ; divider:inst|n2[0] ; divider:inst|OUT_clk2 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.772      ;
; -1.728 ; divider:inst|n2[3] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.760      ;
; -1.728 ; divider:inst|n2[3] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.760      ;
; -1.727 ; divider:inst|n2[3] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.759      ;
; -1.719 ; divider:inst|n2[1] ; divider:inst|n2[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.751      ;
; -1.718 ; divider:inst|n2[1] ; divider:inst|n2[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.750      ;
; -1.717 ; divider:inst|n2[1] ; divider:inst|n2[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.749      ;
; -1.716 ; divider:inst|n1[1] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.748      ;
; -1.716 ; divider:inst|n1[1] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.748      ;
; -1.716 ; divider:inst|n1[1] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.748      ;
; -1.715 ; divider:inst|n1[1] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.747      ;
; -1.715 ; divider:inst|n1[1] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.747      ;
; -1.715 ; divider:inst|n1[1] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.747      ;
; -1.713 ; divider:inst|n1[4] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.745      ;
; -1.713 ; divider:inst|n1[4] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.745      ;
; -1.713 ; divider:inst|n1[4] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.745      ;
; -1.713 ; divider:inst|n2[1] ; divider:inst|n2[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.745      ;
; -1.712 ; divider:inst|n1[4] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.744      ;
; -1.712 ; divider:inst|n1[4] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.744      ;
; -1.712 ; divider:inst|n1[4] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.744      ;
; -1.712 ; divider:inst|n2[1] ; divider:inst|OUT_clk2 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.744      ;
; -1.699 ; divider:inst|n1[0] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.731      ;
; -1.699 ; divider:inst|n1[0] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.731      ;
; -1.698 ; divider:inst|n1[0] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.730      ;
; -1.698 ; divider:inst|n1[0] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.730      ;
; -1.697 ; divider:inst|n1[0] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.729      ;
; -1.697 ; divider:inst|n1[0] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.729      ;
; -1.697 ; divider:inst|n1[0] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.729      ;
; -1.697 ; divider:inst|n1[0] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.729      ;
; -1.696 ; divider:inst|n1[0] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.728      ;
; -1.696 ; divider:inst|n1[0] ; divider:inst|n1[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.728      ;
; -1.695 ; divider:inst|n1[0] ; divider:inst|n1[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.727      ;
; -1.688 ; divider:inst|n1[2] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.720      ;
; -1.688 ; divider:inst|n1[2] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.720      ;
; -1.688 ; divider:inst|n1[2] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.720      ;
; -1.687 ; divider:inst|n1[2] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.719      ;
; -1.687 ; divider:inst|n1[2] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.719      ;
; -1.687 ; divider:inst|n1[2] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.719      ;
; -1.685 ; divider:inst|n2[4] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.717      ;
; -1.685 ; divider:inst|n2[4] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.717      ;
; -1.684 ; divider:inst|n2[4] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.716      ;
; -1.682 ; divider:inst|n2[0] ; divider:inst|n2[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.714      ;
; -1.681 ; divider:inst|n2[0] ; divider:inst|n2[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.713      ;
; -1.679 ; divider:inst|n2[0] ; divider:inst|n2[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.711      ;
; -1.677 ; divider:inst|n2[2] ; divider:inst|n2[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.709      ;
; -1.676 ; divider:inst|n2[2] ; divider:inst|n2[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.708      ;
; -1.675 ; divider:inst|n2[2] ; divider:inst|n2[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.707      ;
; -1.671 ; divider:inst|n2[0] ; divider:inst|n2[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.703      ;
; -1.671 ; divider:inst|n2[2] ; divider:inst|n2[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.703      ;
; -1.670 ; divider:inst|n2[2] ; divider:inst|OUT_clk2 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.702      ;
; -1.660 ; divider:inst|n2[5] ; divider:inst|n2[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.692      ;
; -1.660 ; divider:inst|n2[5] ; divider:inst|n2[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.692      ;
; -1.659 ; divider:inst|n2[5] ; divider:inst|n2[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.657 ; divider:inst|n1[1] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.689      ;
; -1.657 ; divider:inst|n1[1] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.689      ;
; -1.656 ; divider:inst|n1[1] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.688      ;
; -1.656 ; divider:inst|n1[1] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.688      ;
; -1.655 ; divider:inst|n1[1] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.687      ;
; -1.655 ; divider:inst|n1[1] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.687      ;
; -1.655 ; divider:inst|n1[1] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.687      ;
; -1.655 ; divider:inst|n1[1] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.687      ;
; -1.654 ; divider:inst|n1[4] ; divider:inst|n1[12]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.654 ; divider:inst|n1[4] ; divider:inst|n1[11]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.654 ; divider:inst|n1[1] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.654 ; divider:inst|n1[1] ; divider:inst|n1[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.654 ; divider:inst|n2[1] ; divider:inst|n2[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.653 ; divider:inst|n1[4] ; divider:inst|n1[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.685      ;
; -1.653 ; divider:inst|n1[4] ; divider:inst|n1[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.685      ;
; -1.653 ; divider:inst|n1[1] ; divider:inst|n1[3]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.685      ;
; -1.653 ; divider:inst|n2[1] ; divider:inst|n2[6]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.685      ;
; -1.652 ; divider:inst|n1[3] ; divider:inst|n1[9]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[3] ; divider:inst|n1[4]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[3] ; divider:inst|n1[15]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[4] ; divider:inst|n1[8]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[4] ; divider:inst|n1[13]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[4] ; divider:inst|n1[10]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.652 ; divider:inst|n1[4] ; divider:inst|n1[2]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.684      ;
; -1.651 ; divider:inst|n1[3] ; divider:inst|n1[7]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.683      ;
; -1.651 ; divider:inst|n1[3] ; divider:inst|n1[14]   ; clk          ; clk         ; 1.000        ; 0.000      ; 2.683      ;
; -1.651 ; divider:inst|n1[3] ; divider:inst|OUT_clk1 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.683      ;
; -1.651 ; divider:inst|n1[4] ; divider:inst|n1[5]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.683      ;
+--------+--------------------+-----------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'divider:inst|OUT_clk1'                                                                                                                        ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                          ; Launch Clock          ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+
; -1.147 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.163      ;
; -1.147 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.163      ;
; -1.147 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.163      ;
; -1.147 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.163      ;
; -1.140 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.000      ; 2.172      ;
; -1.139 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 2.158      ;
; -1.136 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.157      ;
; -1.136 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.157      ;
; -1.136 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.157      ;
; -1.136 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.157      ;
; -1.127 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.149      ;
; -1.127 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.149      ;
; -1.121 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.141      ;
; -1.102 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.122      ;
; -1.102 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.122      ;
; -1.102 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.122      ;
; -1.102 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.122      ;
; -1.069 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.085      ;
; -1.069 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.085      ;
; -1.069 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.085      ;
; -1.069 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.085      ;
; -1.062 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.000      ; 2.094      ;
; -1.061 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 2.080      ;
; -1.058 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.079      ;
; -1.058 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.079      ;
; -1.058 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.079      ;
; -1.058 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.079      ;
; -1.053 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.086      ;
; -1.053 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.086      ;
; -1.053 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[39]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.086      ;
; -1.049 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.071      ;
; -1.049 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.071      ;
; -1.043 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.063      ;
; -1.037 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[1]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.004     ; 2.065      ;
; -1.037 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.004     ; 2.065      ;
; -1.037 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.004     ; 2.065      ;
; -1.037 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[13] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.004     ; 2.065      ;
; -1.024 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.044      ;
; -1.024 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.044      ;
; -1.024 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.044      ;
; -1.024 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.044      ;
; -1.011 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.027      ;
; -1.011 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.027      ;
; -1.011 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.027      ;
; -1.011 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.027      ;
; -1.007 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.023      ;
; -1.007 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.023      ;
; -1.007 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.023      ;
; -1.007 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.016     ; 2.023      ;
; -1.004 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.000      ; 2.036      ;
; -1.003 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 2.022      ;
; -1.000 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.000      ; 2.032      ;
; -1.000 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.021      ;
; -1.000 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.021      ;
; -1.000 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.021      ;
; -1.000 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.021      ;
; -0.999 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.013     ; 2.018      ;
; -0.996 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.017      ;
; -0.996 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.017      ;
; -0.996 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.017      ;
; -0.996 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.011     ; 2.017      ;
; -0.991 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.013      ;
; -0.991 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.013      ;
; -0.990 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[59]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.003      ; 2.025      ;
; -0.987 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[45]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.009      ;
; -0.987 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.010     ; 2.009      ;
; -0.985 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[43]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.003      ; 2.020      ;
; -0.985 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[35]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.003      ; 2.020      ;
; -0.985 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.005      ;
; -0.982 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[28]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.011      ; 2.025      ;
; -0.982 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[34]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.011      ; 2.025      ;
; -0.982 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[17]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.011      ; 2.025      ;
; -0.982 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[61]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.011      ; 2.025      ;
; -0.982 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[21]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.011      ; 2.025      ;
; -0.981 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 2.001      ;
; -0.977 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 2.021      ;
; -0.977 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_show_value[12] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.012      ; 2.021      ;
; -0.975 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[20]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.010      ; 2.017      ;
; -0.975 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.031     ; 1.976      ;
; -0.975 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.031     ; 1.976      ;
; -0.975 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.031     ; 1.976      ;
; -0.975 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.031     ; 1.976      ;
; -0.975 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.008      ;
; -0.975 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.008      ;
; -0.975 ; key_out:inst3|OUT_number[0] ; key_out:inst3|OUT_value[39]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.001      ; 2.008      ;
; -0.968 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.015     ; 1.985      ;
; -0.967 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.028     ; 1.971      ;
; -0.966 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.986      ;
; -0.966 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.986      ;
; -0.966 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.986      ;
; -0.966 ; key_out:inst3|OUT_number[2] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.986      ;
; -0.964 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.026     ; 1.970      ;
; -0.964 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.026     ; 1.970      ;
; -0.964 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.026     ; 1.970      ;
; -0.964 ; keyboard:inst5|OUT_value[3] ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.026     ; 1.970      ;
; -0.962 ; key_out:inst3|OUT_number[1] ; key_out:inst3|OUT_value[41]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; 0.004      ; 1.998      ;
; -0.962 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.982      ;
; -0.962 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.982      ;
; -0.962 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.982      ;
; -0.962 ; key_out:inst3|OUT_number[3] ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; 1.000        ; -0.012     ; 1.982      ;
+--------+-----------------------------+----------------------------------+-----------------------+-----------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'divider:inst|OUT_clk2'                                                                                                                                                 ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.188 ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.056      ; 0.400      ;
; 0.243 ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.096      ; 0.385      ;
; 0.245 ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.102      ; 0.389      ;
; 0.246 ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.098      ; 0.384      ;
; 0.248 ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.101      ; 0.385      ;
; 0.252 ; serial_output:inst2|flag~1            ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.102      ; 0.382      ;
; 0.284 ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.058      ; 0.306      ;
; 0.332 ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.097      ; 0.297      ;
; 0.347 ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.119      ; 0.304      ;
; 0.354 ; serial_output:inst2|OUT_ser~1         ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.057      ; 0.235      ;
; 0.591 ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 0.101      ; 0.042      ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node               ; Launch Clock          ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+
; -1.415 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; clk         ; 0.000        ; 1.489      ; 0.367      ;
; -1.402 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; clk         ; 0.000        ; 1.476      ; 0.367      ;
; -0.915 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; divider:inst|OUT_clk2 ; clk         ; -0.500       ; 1.489      ; 0.367      ;
; -0.902 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; divider:inst|OUT_clk1 ; clk         ; -0.500       ; 1.476      ; 0.367      ;
; 0.236  ; divider:inst|n1[31]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.388      ;
; 0.236  ; divider:inst|n2[31]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.388      ;
; 0.556  ; divider:inst|n2[31]   ; divider:inst|n2[26]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.708      ;
; 0.558  ; divider:inst|n2[31]   ; divider:inst|n2[29]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.710      ;
; 0.558  ; divider:inst|n2[31]   ; divider:inst|n2[22]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.710      ;
; 0.559  ; divider:inst|n2[31]   ; divider:inst|n2[21]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.711      ;
; 0.559  ; divider:inst|n2[31]   ; divider:inst|n2[27]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.711      ;
; 0.560  ; divider:inst|n2[31]   ; divider:inst|n2[18]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.560  ; divider:inst|n2[31]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.560  ; divider:inst|n2[31]   ; divider:inst|n2[23]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.560  ; divider:inst|n2[31]   ; divider:inst|n2[25]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.560  ; divider:inst|n2[31]   ; divider:inst|n2[28]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.561  ; divider:inst|n2[31]   ; divider:inst|n2[16]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.713      ;
; 0.561  ; divider:inst|n2[31]   ; divider:inst|n2[17]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.713      ;
; 0.562  ; divider:inst|n2[31]   ; divider:inst|n2[30]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.714      ;
; 0.568  ; divider:inst|n1[31]   ; divider:inst|n1[17]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.719      ;
; 0.571  ; divider:inst|n1[31]   ; divider:inst|n1[23]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.722      ;
; 0.571  ; divider:inst|n1[31]   ; divider:inst|n1[28]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.722      ;
; 0.571  ; divider:inst|n2[30]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.723      ;
; 0.572  ; divider:inst|n1[31]   ; divider:inst|n1[22]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.723      ;
; 0.572  ; divider:inst|n1[31]   ; divider:inst|n1[25]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.723      ;
; 0.572  ; divider:inst|n1[31]   ; divider:inst|n1[26]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.723      ;
; 0.573  ; divider:inst|n1[31]   ; divider:inst|n1[29]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.724      ;
; 0.573  ; divider:inst|n1[31]   ; divider:inst|n1[16]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.724      ;
; 0.573  ; divider:inst|n1[31]   ; divider:inst|n1[19]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.724      ;
; 0.573  ; divider:inst|n1[31]   ; divider:inst|n1[20]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.724      ;
; 0.573  ; divider:inst|n1[31]   ; divider:inst|n1[24]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.724      ;
; 0.574  ; divider:inst|n1[31]   ; divider:inst|n1[30]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.725      ;
; 0.574  ; divider:inst|n1[31]   ; divider:inst|n1[18]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.725      ;
; 0.574  ; divider:inst|n1[31]   ; divider:inst|n1[21]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.725      ;
; 0.574  ; divider:inst|n1[31]   ; divider:inst|n1[27]   ; clk                   ; clk         ; 0.000        ; -0.001     ; 0.725      ;
; 0.574  ; divider:inst|n1[30]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.727      ;
; 0.614  ; divider:inst|n2[29]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.766      ;
; 0.615  ; divider:inst|n1[29]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.768      ;
; 0.641  ; divider:inst|n2[31]   ; divider:inst|n2[11]   ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.795      ;
; 0.643  ; divider:inst|n2[31]   ; divider:inst|n2[13]   ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.797      ;
; 0.645  ; divider:inst|n2[28]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.646  ; divider:inst|n2[31]   ; divider:inst|n2[14]   ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.800      ;
; 0.646  ; divider:inst|n1[28]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.799      ;
; 0.647  ; divider:inst|n2[31]   ; divider:inst|n2[12]   ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.801      ;
; 0.648  ; divider:inst|n2[31]   ; divider:inst|n2[15]   ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.802      ;
; 0.679  ; divider:inst|n1[27]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.832      ;
; 0.682  ; divider:inst|n2[27]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.834      ;
; 0.683  ; divider:inst|n2[31]   ; divider:inst|n2[3]    ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.837      ;
; 0.683  ; divider:inst|n2[31]   ; divider:inst|n2[8]    ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.837      ;
; 0.714  ; divider:inst|n2[24]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.866      ;
; 0.716  ; divider:inst|n2[26]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.868      ;
; 0.720  ; divider:inst|n1[26]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.873      ;
; 0.751  ; divider:inst|n1[25]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.904      ;
; 0.755  ; divider:inst|n2[25]   ; divider:inst|n2[31]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.907      ;
; 0.757  ; divider:inst|n2[23]   ; divider:inst|n2[23]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.909      ;
; 0.762  ; divider:inst|n2[15]   ; divider:inst|n2[15]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.914      ;
; 0.763  ; divider:inst|n2[0]    ; divider:inst|n2[0]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.915      ;
; 0.763  ; divider:inst|n1[23]   ; divider:inst|n1[23]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.915      ;
; 0.765  ; divider:inst|n2[29]   ; divider:inst|n2[29]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.917      ;
; 0.768  ; divider:inst|n2[31]   ; divider:inst|n2[4]    ; clk                   ; clk         ; 0.000        ; 0.002      ; 0.922      ;
; 0.768  ; divider:inst|n1[29]   ; divider:inst|n1[29]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.920      ;
; 0.770  ; divider:inst|n1[0]    ; divider:inst|n1[0]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.922      ;
; 0.770  ; divider:inst|n1[16]   ; divider:inst|n1[16]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.922      ;
; 0.773  ; divider:inst|n2[21]   ; divider:inst|n2[21]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.925      ;
; 0.775  ; divider:inst|n2[22]   ; divider:inst|n2[22]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.927      ;
; 0.778  ; divider:inst|n1[22]   ; divider:inst|n1[22]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.930      ;
; 0.779  ; divider:inst|n1[24]   ; divider:inst|n1[24]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.931      ;
; 0.780  ; divider:inst|n2[16]   ; divider:inst|n2[16]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.932      ;
; 0.780  ; divider:inst|n1[21]   ; divider:inst|n1[21]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.932      ;
; 0.782  ; divider:inst|n2[20]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.934      ;
; 0.782  ; divider:inst|n1[20]   ; divider:inst|n1[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.934      ;
; 0.800  ; divider:inst|n1[24]   ; divider:inst|n1[31]   ; clk                   ; clk         ; 0.000        ; 0.001      ; 0.953      ;
; 0.803  ; divider:inst|n2[14]   ; divider:inst|n2[14]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.955      ;
; 0.809  ; divider:inst|n2[11]   ; divider:inst|n2[11]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.961      ;
; 0.812  ; divider:inst|n2[26]   ; divider:inst|n2[26]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.964      ;
; 0.813  ; divider:inst|n2[8]    ; divider:inst|n2[8]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.965      ;
; 0.815  ; divider:inst|n1[25]   ; divider:inst|n1[25]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.967      ;
; 0.816  ; divider:inst|n1[31]   ; divider:inst|n1[4]    ; clk                   ; clk         ; 0.000        ; -0.005     ; 0.963      ;
; 0.816  ; divider:inst|n1[28]   ; divider:inst|n1[28]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.968      ;
; 0.817  ; divider:inst|n1[31]   ; divider:inst|n1[9]    ; clk                   ; clk         ; 0.000        ; -0.005     ; 0.964      ;
; 0.818  ; divider:inst|n2[28]   ; divider:inst|n2[28]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.970      ;
; 0.818  ; divider:inst|n2[3]    ; divider:inst|n2[3]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.970      ;
; 0.819  ; divider:inst|n1[31]   ; divider:inst|n1[7]    ; clk                   ; clk         ; 0.000        ; -0.005     ; 0.966      ;
; 0.819  ; divider:inst|n1[31]   ; divider:inst|n1[14]   ; clk                   ; clk         ; 0.000        ; -0.005     ; 0.966      ;
; 0.819  ; divider:inst|n1[26]   ; divider:inst|n1[26]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.971      ;
; 0.820  ; divider:inst|n2[25]   ; divider:inst|n2[25]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.972      ;
; 0.821  ; divider:inst|n1[31]   ; divider:inst|n1[15]   ; clk                   ; clk         ; 0.000        ; -0.005     ; 0.968      ;
; 0.822  ; divider:inst|n2[4]    ; divider:inst|n2[4]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.974      ;
; 0.823  ; divider:inst|n1[17]   ; divider:inst|n1[17]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.975      ;
; 0.825  ; divider:inst|n2[2]    ; divider:inst|n2[2]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.977      ;
; 0.825  ; divider:inst|n1[19]   ; divider:inst|n1[19]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.977      ;
; 0.830  ; divider:inst|n1[2]    ; divider:inst|n1[2]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.982      ;
; 0.830  ; divider:inst|n2[13]   ; divider:inst|n2[13]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.982      ;
; 0.831  ; divider:inst|n1[12]   ; divider:inst|n1[12]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.983      ;
; 0.833  ; divider:inst|n2[12]   ; divider:inst|n2[12]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.985      ;
; 0.836  ; divider:inst|n2[18]   ; divider:inst|n2[18]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.988      ;
; 0.836  ; divider:inst|n2[17]   ; divider:inst|n2[17]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.988      ;
; 0.838  ; divider:inst|n2[19]   ; divider:inst|n2[20]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.990      ;
; 0.847  ; divider:inst|n2[9]    ; divider:inst|n2[9]    ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.999      ;
; 0.847  ; divider:inst|n2[27]   ; divider:inst|n2[27]   ; clk                   ; clk         ; 0.000        ; 0.000      ; 0.999      ;
+--------+-----------------------+-----------------------+-----------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'divider:inst|OUT_clk1'                                                                                                                                 ;
+--------+----------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack  ; From Node                        ; To Node                          ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; -0.937 ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1 ; 0.000        ; 1.363      ; 0.719      ;
; -0.437 ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1 ; -0.500       ; 1.363      ; 0.719      ;
; 0.215  ; keyboard:inst5|flag[0]           ; keyboard:inst5|flag[0]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; keyboard:inst5|flag[1]           ; keyboard:inst5|flag[1]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.367      ;
; 0.244  ; key_out:inst3|OUT_value[17]      ; key_out:inst3|OUT_value[21]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.396      ;
; 0.245  ; keyboard:inst5|OUT_key           ; anti_shake:inst4|state           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.397      ;
; 0.252  ; key_out:inst3|OUT_value[46]      ; key_out:inst3|OUT_value[50]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.404      ;
; 0.262  ; keyboard:inst5|OUT_value[3]      ; anti_shake:inst4|OUT_key         ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.414      ;
; 0.262  ; key_out:inst3|OUT_show_value[4]  ; key_out:inst3|OUT_show_value[0]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.414      ;
; 0.268  ; key_out:inst3|OUT_show_value[4]  ; key_out:inst3|OUT_show_value[8]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.420      ;
; 0.298  ; key_out:inst3|OUT_value[23]      ; key_out:inst3|OUT_value[27]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.450      ;
; 0.302  ; key_out:inst3|OUT_value[23]      ; key_out:inst3|OUT_value[19]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.454      ;
; 0.308  ; key_out:inst3|OUT_show_value[1]  ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.460      ;
; 0.310  ; key_out:inst3|OUT_value[22]      ; key_out:inst3|OUT_value[26]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.462      ;
; 0.312  ; key_out:inst3|OUT_show_value[15] ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.464      ;
; 0.314  ; key_out:inst3|OUT_show_value[9]  ; key_out:inst3|OUT_show_value[13] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.466      ;
; 0.315  ; key_out:inst3|OUT_show_value[11] ; key_out:inst3|OUT_show_value[15] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.467      ;
; 0.331  ; key_out:inst3|OUT_value[50]      ; key_out:inst3|OUT_value[46]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.483      ;
; 0.333  ; key_out:inst3|OUT_value[28]      ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.486      ;
; 0.337  ; key_out:inst3|OUT_value[50]      ; key_out:inst3|OUT_value[54]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.488      ;
; 0.342  ; key_out:inst3|OUT_show_value[0]  ; key_out:inst3|OUT_show_value[4]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.494      ;
; 0.362  ; key_out:inst3|OUT_value[21]      ; key_out:inst3|OUT_value[17]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.514      ;
; 0.364  ; key_out:inst3|OUT_value[51]      ; key_out:inst3|OUT_value[47]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.516      ;
; 0.366  ; key_out:inst3|OUT_value[53]      ; key_out:inst3|OUT_value[57]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.518      ;
; 0.372  ; keyboard:inst5|flag[0]           ; keyboard:inst5|flag[1]           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; key_out:inst3|OUT_value[58]      ; key_out:inst3|OUT_value[54]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.524      ;
; 0.373  ; key_out:inst3|OUT_value[62]      ; key_out:inst3|OUT_value[58]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.525      ;
; 0.374  ; key_out:inst3|OUT_show_value[5]  ; key_out:inst3|OUT_show_value[1]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.526      ;
; 0.374  ; key_out:inst3|OUT_value[57]      ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.526      ;
; 0.374  ; key_out:inst3|OUT_value[27]      ; key_out:inst3|OUT_value[31]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.526      ;
; 0.376  ; key_out:inst3|OUT_show_value[13] ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.528      ;
; 0.377  ; key_out:inst3|OUT_value[47]      ; key_out:inst3|OUT_value[51]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.529      ;
; 0.379  ; key_out:inst3|OUT_value[58]      ; key_out:inst3|OUT_value[62]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.531      ;
; 0.380  ; key_out:inst3|OUT_value[26]      ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.532      ;
; 0.380  ; key_out:inst3|OUT_show_value[7]  ; key_out:inst3|OUT_show_value[3]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.532      ;
; 0.380  ; key_out:inst3|OUT_show_value[7]  ; key_out:inst3|OUT_show_value[11] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.532      ;
; 0.381  ; key_out:inst3|OUT_value[54]      ; key_out:inst3|OUT_value[58]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.533      ;
; 0.382  ; key_out:inst3|OUT_value[27]      ; key_out:inst3|OUT_value[23]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.534      ;
; 0.383  ; key_out:inst3|OUT_show_value[10] ; key_out:inst3|OUT_show_value[6]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.535      ;
; 0.384  ; key_out:inst3|OUT_number[2]      ; key_out:inst3|OUT_number[2]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.536      ;
; 0.384  ; key_out:inst3|OUT_value[36]      ; key_out:inst3|OUT_value[40]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.536      ;
; 0.384  ; key_out:inst3|OUT_value[29]      ; key_out:inst3|OUT_value[25]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.012      ; 0.548      ;
; 0.388  ; key_out:inst3|OUT_value[40]      ; key_out:inst3|OUT_value[36]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.540      ;
; 0.391  ; key_out:inst3|OUT_show_value[11] ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.543      ;
; 0.391  ; key_out:inst3|OUT_show_value[5]  ; key_out:inst3|OUT_show_value[9]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.543      ;
; 0.393  ; key_out:inst3|OUT_show_value[6]  ; key_out:inst3|OUT_show_value[10] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.545      ;
; 0.393  ; key_out:inst3|OUT_show_value[3]  ; key_out:inst3|OUT_show_value[7]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.545      ;
; 0.396  ; key_out:inst3|OUT_show_value[9]  ; key_out:inst3|OUT_show_value[5]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.548      ;
; 0.396  ; key_out:inst3|OUT_value[18]      ; key_out:inst3|OUT_value[22]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.549      ;
; 0.397  ; key_out:inst3|OUT_value[60]      ; key_out:inst3|OUT_value[56]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.549      ;
; 0.397  ; key_out:inst3|OUT_show_value[8]  ; key_out:inst3|OUT_show_value[4]  ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.549      ;
; 0.419  ; keyboard:inst5|OUT_value[0]      ; anti_shake:inst4|temp_value[0]   ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.571      ;
; 0.429  ; key_out:inst3|OUT_value[16]      ; key_out:inst3|OUT_show_value[12] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.003      ; 0.584      ;
; 0.440  ; display:inst1|state.S1           ; display:inst1|state.S2           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.591      ;
; 0.451  ; key_out:inst3|OUT_number[4]      ; key_out:inst3|OUT_number[4]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.603      ;
; 0.452  ; display:inst1|state.S1           ; keyboard:inst5|OUT_value[0]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.605      ;
; 0.457  ; key_out:inst3|OUT_value[31]      ; key_out:inst3|OUT_value[27]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.609      ;
; 0.459  ; key_out:inst3|OUT_value[29]      ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.612      ;
; 0.461  ; key_out:inst3|OUT_value[54]      ; key_out:inst3|OUT_value[50]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.614      ;
; 0.462  ; key_out:inst3|OUT_number[3]      ; key_out:inst3|OUT_number[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.614      ;
; 0.465  ; key_out:inst3|OUT_value[45]      ; key_out:inst3|OUT_value[41]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.014      ; 0.631      ;
; 0.467  ; key_out:inst3|OUT_number[1]      ; key_out:inst3|OUT_number[1]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.619      ;
; 0.472  ; key_out:inst3|OUT_value[46]      ; key_out:inst3|OUT_value[42]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.625      ;
; 0.472  ; key_out:inst3|OUT_value[49]      ; key_out:inst3|OUT_value[53]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.624      ;
; 0.474  ; key_out:inst3|OUT_value[33]      ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.625      ;
; 0.484  ; key_out:inst3|OUT_value[38]      ; key_out:inst3|OUT_value[34]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.006     ; 0.630      ;
; 0.489  ; display:inst1|state.00           ; keyboard:inst5|OUT_col[2]        ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.004      ; 0.645      ;
; 0.490  ; key_out:inst3|OUT_value[19]      ; key_out:inst3|OUT_value[23]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.642      ;
; 0.499  ; display:inst1|state.S3           ; display:inst1|state.00           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 0.653      ;
; 0.505  ; key_out:inst3|OUT_value[37]      ; key_out:inst3|OUT_value[33]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.656      ;
; 0.510  ; key_out:inst3|OUT_value[42]      ; key_out:inst3|OUT_value[38]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 0.660      ;
; 0.531  ; anti_shake:inst4|temp_value[3]   ; anti_shake:inst4|OUT_key         ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.683      ;
; 0.538  ; keyboard:inst5|OUT_key           ; keyboard:inst5|OUT_key           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.690      ;
; 0.538  ; key_out:inst3|OUT_show_value[12] ; key_out:inst3|OUT_value[16]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.003     ; 0.687      ;
; 0.540  ; display:inst1|state.00           ; display:inst1|state.S1           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.691      ;
; 0.543  ; key_out:inst3|OUT_value[24]      ; key_out:inst3|OUT_value[28]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.694      ;
; 0.547  ; keyboard:inst5|OUT_value[3]      ; keyboard:inst5|OUT_value[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.699      ;
; 0.548  ; display:inst1|state.S2           ; display:inst1|state.S3           ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.700      ;
; 0.549  ; key_out:inst3|OUT_value[25]      ; key_out:inst3|OUT_value[29]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.012     ; 0.689      ;
; 0.550  ; key_out:inst3|OUT_value[44]      ; key_out:inst3|OUT_value[40]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 0.700      ;
; 0.551  ; key_out:inst3|OUT_value[59]      ; key_out:inst3|OUT_value[63]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.015      ; 0.718      ;
; 0.552  ; key_out:inst3|OUT_value[41]      ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.014     ; 0.690      ;
; 0.552  ; key_out:inst3|OUT_value[52]      ; key_out:inst3|OUT_value[56]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 0.702      ;
; 0.554  ; key_out:inst3|OUT_value[52]      ; key_out:inst3|OUT_value[48]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 0.704      ;
; 0.555  ; key_out:inst3|OUT_value[20]      ; key_out:inst3|OUT_value[24]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 0.709      ;
; 0.556  ; key_out:inst3|OUT_number[0]      ; key_out:inst3|OUT_number[0]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.708      ;
; 0.559  ; key_out:inst3|OUT_value[38]      ; key_out:inst3|OUT_value[42]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 0.713      ;
; 0.560  ; key_out:inst3|OUT_value[16]      ; key_out:inst3|OUT_value[20]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.713      ;
; 0.565  ; key_out:inst3|OUT_value[56]      ; key_out:inst3|OUT_value[52]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 0.719      ;
; 0.565  ; key_out:inst3|OUT_value[63]      ; key_out:inst3|OUT_value[59]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.015     ; 0.702      ;
; 0.567  ; keyboard:inst5|OUT_value[2]      ; key_out:inst3|OUT_value[62]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.002      ; 0.721      ;
; 0.567  ; key_out:inst3|OUT_value[33]      ; key_out:inst3|OUT_value[37]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.001      ; 0.720      ;
; 0.567  ; key_out:inst3|OUT_value[24]      ; key_out:inst3|OUT_value[20]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.002     ; 0.717      ;
; 0.570  ; key_out:inst3|OUT_value[59]      ; key_out:inst3|OUT_value[55]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.014      ; 0.736      ;
; 0.573  ; key_out:inst3|OUT_value[42]      ; key_out:inst3|OUT_value[46]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.724      ;
; 0.575  ; key_out:inst3|OUT_value[18]      ; key_out:inst3|OUT_show_value[14] ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.031      ; 0.758      ;
; 0.575  ; key_out:inst3|OUT_value[45]      ; key_out:inst3|OUT_value[49]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.726      ;
; 0.576  ; key_out:inst3|OUT_value[57]      ; key_out:inst3|OUT_value[61]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.022      ; 0.750      ;
; 0.577  ; key_out:inst3|OUT_number[2]      ; key_out:inst3|OUT_number[3]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; 0.000      ; 0.729      ;
; 0.578  ; key_out:inst3|OUT_value[22]      ; key_out:inst3|OUT_value[18]      ; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1 ; 0.000        ; -0.001     ; 0.729      ;
+--------+----------------------------------+----------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'key_out:inst3|OUT_finish'                                                                                                                                           ;
+--------+---------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack  ; From Node                             ; To Node                               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+
; -0.520 ; key_out:inst3|OUT_finish              ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.324      ; 0.945      ;
; -0.436 ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.328      ; 1.033      ;
; -0.222 ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.391      ; 1.310      ;
; -0.110 ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.324      ; 1.355      ;
; -0.106 ; key_out:inst3|OUT_finish              ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.323      ; 1.358      ;
; -0.101 ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.327      ; 1.367      ;
; -0.045 ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.323      ; 1.419      ;
; -0.038 ; key_out:inst3|OUT_finish              ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.392      ; 1.495      ;
; -0.020 ; key_out:inst3|OUT_finish              ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.324      ; 0.945      ;
; 0.054  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.383      ; 1.578      ;
; 0.064  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.328      ; 1.033      ;
; 0.278  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.391      ; 1.310      ;
; 0.390  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.324      ; 1.355      ;
; 0.394  ; key_out:inst3|OUT_finish              ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.323      ; 1.358      ;
; 0.399  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.327      ; 1.367      ;
; 0.455  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.323      ; 1.419      ;
; 0.462  ; key_out:inst3|OUT_finish              ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.392      ; 1.495      ;
; 0.554  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; -0.500       ; 1.383      ; 1.578      ;
; 0.737  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 0.738      ;
; 0.738  ; serial_output:inst2|flag~1            ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 0.739      ;
; 0.742  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 0.746      ;
; 0.744  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 0.744      ;
; 0.745  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.005     ; 0.740      ;
; 0.745  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.003     ; 0.742      ;
; 0.813  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.059     ; 0.754      ;
; 0.821  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.004     ; 0.817      ;
; 0.821  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.005      ; 0.826      ;
; 0.822  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 0.822      ;
; 0.822  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.005      ; 0.827      ;
; 0.826  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.008      ; 0.834      ;
; 0.828  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 0.832      ;
; 0.829  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 0.828      ;
; 0.829  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 0.830      ;
; 0.881  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|OUT_shanke_hand~1 ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.067     ; 0.814      ;
; 0.897  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.055     ; 0.842      ;
; 0.905  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 0.905      ;
; 0.906  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 0.910      ;
; 0.965  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[7]~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.063     ; 0.902      ;
; 1.035  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.068      ; 1.103      ;
; 1.036  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.068      ; 1.104      ;
; 1.040  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.071      ; 1.111      ;
; 1.042  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.067      ; 1.109      ;
; 1.043  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.062      ; 1.105      ;
; 1.043  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.064      ; 1.107      ;
; 1.061  ; key_out:inst3|OUT_finish              ; serial_output:inst2|n[1]~9            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 1.320      ; 2.522      ;
; 1.111  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.008      ; 1.119      ;
; 1.119  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.063      ; 1.182      ;
; 1.120  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.067      ; 1.187      ;
; 1.147  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 1.148      ;
; 1.148  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.001      ; 1.149      ;
; 1.151  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.151      ;
; 1.152  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 1.156      ;
; 1.152  ; serial_output:inst2|flag~1            ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.152      ;
; 1.154  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.154      ;
; 1.155  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.005     ; 1.150      ;
; 1.155  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.003     ; 1.152      ;
; 1.156  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.003      ; 1.159      ;
; 1.156  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 1.160      ;
; 1.157  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.004      ; 1.161      ;
; 1.158  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 1.157      ;
; 1.159  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.006     ; 1.153      ;
; 1.159  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.004     ; 1.155      ;
; 1.161  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.007      ; 1.168      ;
; 1.163  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.003      ; 1.166      ;
; 1.164  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.002     ; 1.162      ;
; 1.164  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.164      ;
; 1.179  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[0]~13           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.179      ;
; 1.212  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.212      ;
; 1.213  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.213      ;
; 1.217  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.003      ; 1.220      ;
; 1.219  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 1.218      ;
; 1.219  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.069      ; 1.288      ;
; 1.220  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.006     ; 1.214      ;
; 1.220  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.004     ; 1.216      ;
; 1.220  ; serial_output:inst2|flag~1            ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.069      ; 1.289      ;
; 1.223  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.059     ; 1.164      ;
; 1.224  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.072      ; 1.296      ;
; 1.226  ; serial_output:inst2|n[4]~29           ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.068      ; 1.294      ;
; 1.227  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.060     ; 1.167      ;
; 1.227  ; serial_output:inst2|n[6]~5            ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.063      ; 1.290      ;
; 1.227  ; serial_output:inst2|n[2]~17           ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.065      ; 1.292      ;
; 1.231  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.004     ; 1.227      ;
; 1.232  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.000      ; 1.232      ;
; 1.232  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.056     ; 1.176      ;
; 1.235  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.005     ; 1.230      ;
; 1.236  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 1.235      ;
; 1.240  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 1.239      ;
; 1.241  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.003      ; 1.244      ;
; 1.288  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.060     ; 1.228      ;
; 1.291  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[4]~29           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.067     ; 1.224      ;
; 1.295  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|flag~1            ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.068     ; 1.227      ;
; 1.295  ; serial_output:inst2|n[3]~21           ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.009      ; 1.304      ;
; 1.295  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.064      ; 1.359      ;
; 1.296  ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.005     ; 1.291      ;
; 1.297  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|n[5]~25           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.001     ; 1.296      ;
; 1.300  ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[2]~17           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; -0.064     ; 1.236      ;
; 1.304  ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_ser~1         ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.068      ; 1.372      ;
; 1.311  ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.060      ; 1.371      ;
; 1.312  ; serial_output:inst2|flag~1            ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.060      ; 1.372      ;
; 1.316  ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[3]~21           ; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0.000        ; 0.063      ; 1.379      ;
+--------+---------------------------------------+---------------------------------------+--------------------------+--------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'divider:inst|OUT_clk2'                                                                                                                                                  ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.289 ; serial_output:inst2|OUT_shanke_hand~1 ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.101      ; 0.042      ;
; 0.526 ; serial_output:inst2|OUT_ser~1         ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.057      ; 0.235      ;
; 0.533 ; serial_output:inst2|n[1]~9            ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.119      ; 0.304      ;
; 0.548 ; serial_output:inst2|n[7]~1            ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.097      ; 0.297      ;
; 0.596 ; serial_output:inst2|n[0]~13           ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.058      ; 0.306      ;
; 0.628 ; serial_output:inst2|flag~1            ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.102      ; 0.382      ;
; 0.632 ; serial_output:inst2|n[4]~29           ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.101      ; 0.385      ;
; 0.634 ; serial_output:inst2|n[2]~17           ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.098      ; 0.384      ;
; 0.635 ; serial_output:inst2|n[5]~25           ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.102      ; 0.389      ;
; 0.637 ; serial_output:inst2|n[6]~5            ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.096      ; 0.385      ;
; 0.692 ; serial_output:inst2|n[3]~21           ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 0.056      ; 0.400      ;
+-------+---------------------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'divider:inst|OUT_clk2'                                                                                                                                 ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.252 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.425      ; 1.846      ;
; 0.256 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.439      ; 1.856      ;
; 0.256 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.439      ; 1.856      ;
; 0.256 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.449      ; 1.866      ;
; 0.256 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.500        ; 1.449      ; 1.866      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.752 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.425      ; 1.846      ;
; 0.756 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.439      ; 1.856      ;
; 0.756 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.439      ; 1.856      ;
; 0.756 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.449      ; 1.866      ;
; 0.756 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 1.000        ; 1.449      ; 1.866      ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'divider:inst|OUT_clk2'                                                                                                                                  ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; Slack ; From Node                ; To Node                                       ; Launch Clock             ; Latch Clock           ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+
; 0.124 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.439      ; 1.856      ;
; 0.124 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.439      ; 1.856      ;
; 0.124 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.449      ; 1.866      ;
; 0.124 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.449      ; 1.866      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.128 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 0.000        ; 1.425      ; 1.846      ;
; 0.624 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[1]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.439      ; 1.856      ;
; 0.624 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[3]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.439      ; 1.856      ;
; 0.624 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[0]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.449      ; 1.866      ;
; 0.624 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_ser~_emulated         ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.449      ; 1.866      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[2]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[5]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[6]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[7]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|n[4]~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|flag~_emulated            ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
; 0.628 ; key_out:inst3|OUT_finish ; serial_output:inst2|OUT_shanke_hand~_emulated ; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; -0.500       ; 1.425      ; 1.846      ;
+-------+--------------------------+-----------------------------------------------+--------------------------+-----------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|OUT_clk1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|OUT_clk1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|OUT_clk2 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|OUT_clk2 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[12]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[12]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[13]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[13]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[14]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[14]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[15]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[15]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[16]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[16]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[17]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[17]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[18]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[18]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[19]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[19]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[20]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[20]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[21]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[21]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[22]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[22]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[23]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[23]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[24]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[24]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[25]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[25]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[26]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[26]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[27]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[27]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[28]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[28]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[29]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[29]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[30]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[30]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[31]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[31]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[8]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[8]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n1[9]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n1[9]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[12]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[12]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[13]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[13]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[14]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[14]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[15]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[15]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[16]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[16]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[17]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[17]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[18]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[18]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[19]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[19]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[20]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[20]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[21]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[21]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[22]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; divider:inst|n2[22]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; divider:inst|n2[23]   ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'divider:inst|OUT_clk1'                                                                           ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                           ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|OUT_key         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|OUT_key         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|state           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|state           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; anti_shake:inst4|temp_value[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.00           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.00           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S1           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S1           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S2           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S2           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S3           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; display:inst1|state.S3           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_finish         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_finish         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_show_value[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[16]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[16]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[17]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[17]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[18]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[18]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[19]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[19]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[20]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[20]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[21]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[21]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[22]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[22]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[23]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[23]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[24]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[24]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[25]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[25]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[26]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[26]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[27]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[27]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[28]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[28]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[29]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[29]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[30]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[30]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[31]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[31]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[32]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[32]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[33]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk1 ; Rise       ; key_out:inst3|OUT_value[33]      ;
+--------+--------------+----------------+------------------+-----------------------+------------+----------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'divider:inst|OUT_clk2'                                                                                        ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                 ; Clock Edge ; Target                                        ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_ser~_emulated         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_ser~_emulated         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_shanke_hand~_emulated ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|OUT_shanke_hand~_emulated ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|flag~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|flag~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[0]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[0]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[1]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[1]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[2]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[2]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[3]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[3]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[4]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[4]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[5]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[5]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[6]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[6]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[7]~_emulated            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; serial_output:inst2|n[7]~_emulated            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_ser~_emulated|clk                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_ser~_emulated|clk                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_shanke_hand~_emulated|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|OUT_shanke_hand~_emulated|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|flag~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|flag~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[0]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[0]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[1]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[1]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[2]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[2]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[3]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[3]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[4]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[4]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[5]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[5]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[6]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[6]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[7]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst2|n[7]~_emulated|clk                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2|regout                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2|regout                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; divider:inst|OUT_clk2 ; Rise       ; inst|OUT_clk2~clkctrl|outclk                  ;
+--------+--------------+----------------+------------------+-----------------------+------------+-----------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'key_out:inst3|OUT_finish'                                                                               ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                    ; Clock Edge ; Target                                ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_ser~1|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_ser~1|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_shanke_hand~1|datad         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|OUT_shanke_hand~1|datad         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|flag~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|flag~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[0]~13|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[0]~13|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[1]~9|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[1]~9|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[2]~17|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[2]~17|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[3]~21|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[3]~21|datac                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[4]~29|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[4]~29|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[5]~25|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[5]~25|datad                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[6]~5|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[6]~5|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[7]~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst2|n[7]~1|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish|regout               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish|regout               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Rise       ; inst3|OUT_finish~clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_ser~1         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_ser~1         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_shanke_hand~1 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|OUT_shanke_hand~1 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|flag~1            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|flag~1            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[0]~13           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[0]~13           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[1]~9            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[1]~9            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[2]~17           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[2]~17           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[3]~21           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[3]~21           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[4]~29           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[4]~29           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[5]~25           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[5]~25           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[6]~5            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[6]~5            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[7]~1            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; key_out:inst3|OUT_finish ; Fall       ; serial_output:inst2|n[7]~1            ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------------------+


+----------------------------------------------------------------------------------------+
; Setup Times                                                                            ;
+-----------+-----------------------+-------+-------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise  ; Fall  ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+-------+-------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; 4.565 ; 4.565 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; 4.565 ; 4.565 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; 4.203 ; 4.203 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; 4.372 ; 4.372 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; 4.335 ; 4.335 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+-------+-------+------------+-----------------------+


+------------------------------------------------------------------------------------------+
; Hold Times                                                                               ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise   ; Fall   ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; -2.659 ; -2.659 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; -2.926 ; -2.926 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; -2.659 ; -2.659 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; -3.116 ; -3.116 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; -3.019 ; -3.019 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+--------+--------+------------+-----------------------+


+-------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                           ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise   ; Fall   ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 3.738  ; 3.738  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 3.615  ; 3.615  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 3.645  ; 3.645  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 3.662  ; 3.662  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 3.738  ; 3.738  ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 3.617  ; 3.617  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 3.226  ; 3.226  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 3.251  ; 3.251  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 3.617  ; 3.617  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 3.353  ; 3.353  ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 5.926  ; 5.926  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 5.472  ; 5.472  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 5.501  ; 5.501  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 5.573  ; 5.573  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 5.562  ; 5.562  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 5.766  ; 5.766  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 5.926  ; 5.926  ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 5.637  ; 5.637  ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 11.277 ; 11.277 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 9.750  ; 9.750  ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 8.533  ; 8.533  ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 9.580  ; 9.580  ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+--------+--------+------------+--------------------------+


+-----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                 ;
+------------+--------------------------+-------+-------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise  ; Fall  ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+-------+-------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 3.615 ; 3.615 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 3.615 ; 3.615 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 3.645 ; 3.645 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 3.662 ; 3.662 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 3.738 ; 3.738 ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 3.226 ; 3.226 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 3.226 ; 3.226 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 3.251 ; 3.251 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 3.617 ; 3.617 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 3.353 ; 3.353 ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 4.274 ; 4.274 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 4.274 ; 4.274 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 4.298 ; 4.298 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 4.445 ; 4.445 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 4.486 ; 4.486 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 4.511 ; 4.511 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 4.589 ; 4.589 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 4.288 ; 4.288 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 6.395 ; 6.395 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 4.495 ; 4.495 ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 3.407 ; 3.407 ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 3.407 ; 3.407 ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+-------+-------+------------+--------------------------+


+------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                      ;
+---------------------------+----------+--------+----------+---------+---------------------+
; Clock                     ; Setup    ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+---------------------------+----------+--------+----------+---------+---------------------+
; Worst-case Slack          ; -22.728  ; -2.611 ; -0.534   ; 0.124   ; -1.941              ;
;  clk                      ; -7.234   ; -2.611 ; N/A      ; N/A     ; -1.941              ;
;  divider:inst|OUT_clk1    ; -5.418   ; -1.537 ; N/A      ; N/A     ; -0.742              ;
;  divider:inst|OUT_clk2    ; -1.191   ; 0.289  ; -0.534   ; 0.124   ; -0.742              ;
;  key_out:inst3|OUT_finish ; -22.728  ; -0.723 ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS           ; -846.842 ; -7.898 ; -5.834   ; 0.0     ; -251.253            ;
;  clk                      ; -387.669 ; -5.205 ; N/A      ; N/A     ; -99.885             ;
;  divider:inst|OUT_clk1    ; -376.327 ; -1.537 ; N/A      ; N/A     ; -135.044            ;
;  divider:inst|OUT_clk2    ; -9.038   ; 0.000  ; -5.834   ; 0.000   ; -16.324             ;
;  key_out:inst3|OUT_finish ; -73.808  ; -1.578 ; N/A      ; N/A     ; 0.000               ;
+---------------------------+----------+--------+----------+---------+---------------------+


+------------------------------------------------------------------------------------------+
; Setup Times                                                                              ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise   ; Fall   ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; 11.925 ; 11.925 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; 11.925 ; 11.925 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; 10.723 ; 10.723 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; 11.318 ; 11.318 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; 11.223 ; 11.223 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+--------+--------+------------+-----------------------+


+------------------------------------------------------------------------------------------+
; Hold Times                                                                               ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; Data Port ; Clock Port            ; Rise   ; Fall   ; Clock Edge ; Clock Reference       ;
+-----------+-----------------------+--------+--------+------------+-----------------------+
; row[*]    ; divider:inst|OUT_clk1 ; -2.659 ; -2.659 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[0]   ; divider:inst|OUT_clk1 ; -2.926 ; -2.926 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[1]   ; divider:inst|OUT_clk1 ; -2.659 ; -2.659 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[2]   ; divider:inst|OUT_clk1 ; -3.116 ; -3.116 ; Rise       ; divider:inst|OUT_clk1 ;
;  row[3]   ; divider:inst|OUT_clk1 ; -3.019 ; -3.019 ; Rise       ; divider:inst|OUT_clk1 ;
+-----------+-----------------------+--------+--------+------------+-----------------------+


+-------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                           ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise   ; Fall   ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+--------+--------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 8.714  ; 8.714  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 8.330  ; 8.330  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 8.377  ; 8.377  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 8.424  ; 8.424  ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 8.714  ; 8.714  ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 8.316  ; 8.316  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 7.136  ; 7.136  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 7.182  ; 7.182  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 8.316  ; 8.316  ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 7.541  ; 7.541  ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 15.525 ; 15.525 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 14.498 ; 14.498 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 14.246 ; 14.246 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 14.546 ; 14.546 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 14.552 ; 14.552 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 15.125 ; 15.125 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 15.525 ; 15.525 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 14.793 ; 14.793 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 33.427 ; 33.427 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 27.991 ; 27.991 ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 25.819 ; 25.819 ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 28.385 ; 28.385 ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+--------+--------+------------+--------------------------+


+-----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                 ;
+------------+--------------------------+-------+-------+------------+--------------------------+
; Data Port  ; Clock Port               ; Rise  ; Fall  ; Clock Edge ; Clock Reference          ;
+------------+--------------------------+-------+-------+------------+--------------------------+
; choice[*]  ; divider:inst|OUT_clk1    ; 3.615 ; 3.615 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[0] ; divider:inst|OUT_clk1    ; 3.615 ; 3.615 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[1] ; divider:inst|OUT_clk1    ; 3.645 ; 3.645 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[2] ; divider:inst|OUT_clk1    ; 3.662 ; 3.662 ; Rise       ; divider:inst|OUT_clk1    ;
;  choice[3] ; divider:inst|OUT_clk1    ; 3.738 ; 3.738 ; Rise       ; divider:inst|OUT_clk1    ;
; col[*]     ; divider:inst|OUT_clk1    ; 3.226 ; 3.226 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[0]    ; divider:inst|OUT_clk1    ; 3.226 ; 3.226 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[1]    ; divider:inst|OUT_clk1    ; 3.251 ; 3.251 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[2]    ; divider:inst|OUT_clk1    ; 3.617 ; 3.617 ; Rise       ; divider:inst|OUT_clk1    ;
;  col[3]    ; divider:inst|OUT_clk1    ; 3.353 ; 3.353 ; Rise       ; divider:inst|OUT_clk1    ;
; seq[*]     ; divider:inst|OUT_clk1    ; 4.274 ; 4.274 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[1]    ; divider:inst|OUT_clk1    ; 4.274 ; 4.274 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[2]    ; divider:inst|OUT_clk1    ; 4.298 ; 4.298 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[3]    ; divider:inst|OUT_clk1    ; 4.445 ; 4.445 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[4]    ; divider:inst|OUT_clk1    ; 4.486 ; 4.486 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[5]    ; divider:inst|OUT_clk1    ; 4.511 ; 4.511 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[6]    ; divider:inst|OUT_clk1    ; 4.589 ; 4.589 ; Rise       ; divider:inst|OUT_clk1    ;
;  seq[7]    ; divider:inst|OUT_clk1    ; 4.288 ; 4.288 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk1    ; 6.395 ; 6.395 ; Rise       ; divider:inst|OUT_clk1    ;
; ser        ; divider:inst|OUT_clk2    ; 4.495 ; 4.495 ; Rise       ; divider:inst|OUT_clk2    ;
; ser        ; key_out:inst3|OUT_finish ; 3.407 ; 3.407 ; Rise       ; key_out:inst3|OUT_finish ;
; ser        ; key_out:inst3|OUT_finish ; 3.407 ; 3.407 ; Fall       ; key_out:inst3|OUT_finish ;
+------------+--------------------------+-------+-------+------------+--------------------------+


+-------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                 ;
+--------------------------+--------------------------+----------+----------+----------+----------+
; From Clock               ; To Clock                 ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------+--------------------------+----------+----------+----------+----------+
; clk                      ; clk                      ; 17306    ; 0        ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; clk                      ; 1        ; 1        ; 0        ; 0        ;
; divider:inst|OUT_clk2    ; clk                      ; 1        ; 1        ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1    ; 1715     ; 0        ; 0        ; 0        ;
; divider:inst|OUT_clk2    ; divider:inst|OUT_clk1    ; 10       ; 0        ; 0        ; 0        ;
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1    ; 11       ; 21       ; 0        ; 0        ;
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2    ; 0        ; 11       ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0        ; 0        ; 641075   ; 0        ;
; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0        ; 0        ; 2120     ; 0        ;
; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0        ; 0        ; 2120     ; 4240     ;
+--------------------------+--------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                  ;
+--------------------------+--------------------------+----------+----------+----------+----------+
; From Clock               ; To Clock                 ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------+--------------------------+----------+----------+----------+----------+
; clk                      ; clk                      ; 17306    ; 0        ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; clk                      ; 1        ; 1        ; 0        ; 0        ;
; divider:inst|OUT_clk2    ; clk                      ; 1        ; 1        ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; divider:inst|OUT_clk1    ; 1715     ; 0        ; 0        ; 0        ;
; divider:inst|OUT_clk2    ; divider:inst|OUT_clk1    ; 10       ; 0        ; 0        ; 0        ;
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk1    ; 11       ; 21       ; 0        ; 0        ;
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2    ; 0        ; 11       ; 0        ; 0        ;
; divider:inst|OUT_clk1    ; key_out:inst3|OUT_finish ; 0        ; 0        ; 641075   ; 0        ;
; divider:inst|OUT_clk2    ; key_out:inst3|OUT_finish ; 0        ; 0        ; 2120     ; 0        ;
; key_out:inst3|OUT_finish ; key_out:inst3|OUT_finish ; 0        ; 0        ; 2120     ; 4240     ;
+--------------------------+--------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+----------------------------------------------------------------------------------------------+
; Recovery Transfers                                                                           ;
+--------------------------+-----------------------+----------+----------+----------+----------+
; From Clock               ; To Clock              ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------+-----------------------+----------+----------+----------+----------+
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 11       ; 11       ; 0        ; 0        ;
+--------------------------+-----------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+----------------------------------------------------------------------------------------------+
; Removal Transfers                                                                            ;
+--------------------------+-----------------------+----------+----------+----------+----------+
; From Clock               ; To Clock              ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------+-----------------------+----------+----------+----------+----------+
; key_out:inst3|OUT_finish ; divider:inst|OUT_clk2 ; 11       ; 11       ; 0        ; 0        ;
+--------------------------+-----------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 5     ; 5    ;
; Unconstrained Input Port Paths  ; 98    ; 98   ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 268   ; 268  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Full Version
    Info: Processing started: Mon Jul 03 15:17:40 2017
Info: Command: quartus_sta serial -c serial
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 4 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 2 of the 2 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 11 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'serial.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name divider:inst|OUT_clk1 divider:inst|OUT_clk1
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name key_out:inst3|OUT_finish key_out:inst3|OUT_finish
    Info (332105): create_clock -period 1.000 -name divider:inst|OUT_clk2 divider:inst|OUT_clk2
Warning (332125): Found combinational loop of 120 nodes
    Warning (332126): Node "inst2|Add14~0|dataa"
    Warning (332126): Node "inst2|Add14~0|cout"
    Warning (332126): Node "inst2|Add14~2|cin"
    Warning (332126): Node "inst2|Add14~2|combout"
    Warning (332126): Node "inst2|n~50|datad"
    Warning (332126): Node "inst2|n~50|combout"
    Warning (332126): Node "inst2|n[1]~10|datab"
    Warning (332126): Node "inst2|n[1]~10|combout"
    Warning (332126): Node "inst2|Equal0~1|dataa"
    Warning (332126): Node "inst2|Equal0~1|combout"
    Warning (332126): Node "inst2|flag~6|datab"
    Warning (332126): Node "inst2|flag~6|combout"
    Warning (332126): Node "inst2|flag~2|dataa"
    Warning (332126): Node "inst2|flag~2|combout"
    Warning (332126): Node "inst2|n~52|datad"
    Warning (332126): Node "inst2|n~52|combout"
    Warning (332126): Node "inst2|n[0]~14|dataa"
    Warning (332126): Node "inst2|n[0]~14|combout"
    Warning (332126): Node "inst2|n~52|dataa"
    Warning (332126): Node "inst2|Equal0~1|datad"
    Warning (332126): Node "inst2|OUT_ser~8|datac"
    Warning (332126): Node "inst2|OUT_ser~8|combout"
    Warning (332126): Node "inst2|n~48|datab"
    Warning (332126): Node "inst2|n~48|combout"
    Warning (332126): Node "inst2|n~52|datab"
    Warning (332126): Node "inst2|n~56|dataa"
    Warning (332126): Node "inst2|n~56|combout"
    Warning (332126): Node "inst2|n[7]~2|dataa"
    Warning (332126): Node "inst2|n[7]~2|combout"
    Warning (332126): Node "inst2|Equal0~1|datac"
    Warning (332126): Node "inst2|n~56|datab"
    Warning (332126): Node "inst2|Add14~14|datad"
    Warning (332126): Node "inst2|Add14~14|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~7|dataa"
    Warning (332126): Node "inst2|OUT_shanke_hand~7|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~2|dataa"
    Warning (332126): Node "inst2|OUT_shanke_hand~2|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~7|datac"
    Warning (332126): Node "inst2|OUT_ser~8|datad"
    Warning (332126): Node "inst2|n~56|datac"
    Warning (332126): Node "inst2|n~48|datad"
    Warning (332126): Node "inst2|n~55|datac"
    Warning (332126): Node "inst2|n~55|combout"
    Warning (332126): Node "inst2|n[6]~6|dataa"
    Warning (332126): Node "inst2|n[6]~6|combout"
    Warning (332126): Node "inst2|Equal0~1|datab"
    Warning (332126): Node "inst2|n~55|datab"
    Warning (332126): Node "inst2|Add14~12|datab"
    Warning (332126): Node "inst2|Add14~12|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~6|datac"
    Warning (332126): Node "inst2|OUT_shanke_hand~6|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~7|datab"
    Warning (332126): Node "inst2|n~48|dataa"
    Warning (332126): Node "inst2|n~55|datad"
    Warning (332126): Node "inst2|Add14~12|cout"
    Warning (332126): Node "inst2|Add14~14|cin"
    Warning (332126): Node "inst2|n~54|datac"
    Warning (332126): Node "inst2|n~54|combout"
    Warning (332126): Node "inst2|n[5]~26|dataa"
    Warning (332126): Node "inst2|n[5]~26|combout"
    Warning (332126): Node "inst2|Equal0~2|datab"
    Warning (332126): Node "inst2|Equal0~2|combout"
    Warning (332126): Node "inst2|flag~6|datac"
    Warning (332126): Node "inst2|n~54|datad"
    Warning (332126): Node "inst2|Add14~10|dataa"
    Warning (332126): Node "inst2|Add14~10|combout"
    Warning (332126): Node "inst2|OUT_shanke_hand~6|datab"
    Warning (332126): Node "inst2|n~48|datac"
    Warning (332126): Node "inst2|n~54|datab"
    Warning (332126): Node "inst2|Add14~10|cout"
    Warning (332126): Node "inst2|Add14~12|cin"
    Warning (332126): Node "inst2|n~49|dataa"
    Warning (332126): Node "inst2|n~49|combout"
    Warning (332126): Node "inst2|n[3]~22|datab"
    Warning (332126): Node "inst2|n[3]~22|combout"
    Warning (332126): Node "inst2|Equal0~2|dataa"
    Warning (332126): Node "inst2|n~49|datab"
    Warning (332126): Node "inst2|Add14~6|datab"
    Warning (332126): Node "inst2|Add14~6|combout"
    Warning (332126): Node "inst2|n~49|datac"
    Warning (332126): Node "inst2|Add14~6|cout"
    Warning (332126): Node "inst2|Add14~8|cin"
    Warning (332126): Node "inst2|Add14~8|combout"
    Warning (332126): Node "inst2|n~53|datab"
    Warning (332126): Node "inst2|n~53|combout"
    Warning (332126): Node "inst2|n[4]~30|dataa"
    Warning (332126): Node "inst2|n[4]~30|combout"
    Warning (332126): Node "inst2|n~53|dataa"
    Warning (332126): Node "inst2|Add14~8|dataa"
    Warning (332126): Node "inst2|Add14~8|cout"
    Warning (332126): Node "inst2|Add14~10|cin"
    Warning (332126): Node "inst2|Equal0~2|datad"
    Warning (332126): Node "inst2|n~51|dataa"
    Warning (332126): Node "inst2|n~51|combout"
    Warning (332126): Node "inst2|n[2]~18|dataa"
    Warning (332126): Node "inst2|n[2]~18|combout"
    Warning (332126): Node "inst2|Equal0~2|datac"
    Warning (332126): Node "inst2|n~51|datac"
    Warning (332126): Node "inst2|Add14~4|datab"
    Warning (332126): Node "inst2|Add14~4|combout"
    Warning (332126): Node "inst2|n~51|datab"
    Warning (332126): Node "inst2|Add14~4|cout"
    Warning (332126): Node "inst2|Add14~6|cin"
    Warning (332126): Node "inst2|n~50|datac"
    Warning (332126): Node "inst2|n~53|datac"
    Warning (332126): Node "inst2|n~56|datad"
    Warning (332126): Node "inst2|n~55|dataa"
    Warning (332126): Node "inst2|n~54|dataa"
    Warning (332126): Node "inst2|n~49|datad"
    Warning (332126): Node "inst2|n~51|datad"
    Warning (332126): Node "inst2|n~50|dataa"
    Warning (332126): Node "inst2|n~53|datad"
    Warning (332126): Node "inst2|flag~6|datad"
    Warning (332126): Node "inst2|OUT_shanke_hand~7|datad"
    Warning (332126): Node "inst2|n~50|datab"
    Warning (332126): Node "inst2|Add14~2|dataa"
    Warning (332126): Node "inst2|Add14~2|cout"
    Warning (332126): Node "inst2|Add14~4|cin"
    Warning (332126): Node "inst2|Add14~0|combout"
    Warning (332126): Node "inst2|n~52|datac"
Critical Warning (332081): Design contains combinational loop of 120 nodes. Estimating the delays through the loop.
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -22.728
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):   -22.728       -73.808 key_out:inst3|OUT_finish 
    Info (332119):    -7.234      -387.669 clk 
    Info (332119):    -5.418      -376.327 divider:inst|OUT_clk1 
    Info (332119):    -1.191        -9.038 divider:inst|OUT_clk2 
Info (332146): Worst-case hold slack is -2.611
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.611        -5.205 clk 
    Info (332119):    -1.537        -1.537 divider:inst|OUT_clk1 
    Info (332119):    -0.723        -1.156 key_out:inst3|OUT_finish 
    Info (332119):     0.686         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case recovery slack is -0.534
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.534        -5.834 divider:inst|OUT_clk2 
Info (332146): Worst-case removal slack is 0.758
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.758         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case minimum pulse width slack is -1.941
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.941       -99.885 clk 
    Info (332119):    -0.742      -135.044 divider:inst|OUT_clk1 
    Info (332119):    -0.742       -16.324 divider:inst|OUT_clk2 
    Info (332119):     0.500         0.000 key_out:inst3|OUT_finish 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -6.670
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -6.670       -21.697 key_out:inst3|OUT_finish 
    Info (332119):    -1.829       -96.738 clk 
    Info (332119):    -1.147       -68.250 divider:inst|OUT_clk1 
    Info (332119):     0.188         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case hold slack is -1.415
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.415        -2.817 clk 
    Info (332119):    -0.937        -0.937 divider:inst|OUT_clk1 
    Info (332119):    -0.520        -1.578 key_out:inst3|OUT_finish 
    Info (332119):     0.289         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case recovery slack is 0.252
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.252         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case removal slack is 0.124
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.124         0.000 divider:inst|OUT_clk2 
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -67.380 clk 
    Info (332119):    -0.500       -91.000 divider:inst|OUT_clk1 
    Info (332119):    -0.500       -11.000 divider:inst|OUT_clk2 
    Info (332119):     0.500         0.000 key_out:inst3|OUT_finish 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 126 warnings
    Info: Peak virtual memory: 444 megabytes
    Info: Processing ended: Mon Jul 03 15:17:41 2017
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:02


